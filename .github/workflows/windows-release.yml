name: Windows Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to upload assets to (e.g., v0.9.7). Leave empty to skip Release upload."
        required: false
        default: ""
      draft:
        description: "Create draft release (manual runs)"
        type: boolean
        required: false
        default: true
      prerelease:
        description: "Mark as prerelease (manual runs)"
        type: boolean
        required: false
        default: false
  push:
    tags:
      - "v*"

jobs:
  make-windows:
    runs-on: windows-latest
    env:
      WINDOWS_PFX_BASE64: ${{ secrets.WINDOWS_PFX_BASE64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install
          npm run install:deps

      - name: Restore code signing cert
        if: env.WINDOWS_PFX_BASE64 != ''
        shell: pwsh
        run: |
          $bytes = [System.Convert]::FromBase64String($env:WINDOWS_PFX_BASE64)
          [IO.File]::WriteAllBytes("$env:RUNNER_TEMP\\codesign.pfx", $bytes)

      - name: Build
        run: npm run build

      - name: Make (Windows)
        env:
          WINDOWS_PFX_FILE: ${{ runner.temp }}\\codesign.pfx
          WINDOWS_PFX_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
        run: npm run electron:make

      - name: Upload to GitHub Release (on tag push)
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            out\make\**\*Setup.exe
            out\make\**\RELEASES
            out\make\**\*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release (manual run)
        if: github.event_name == 'workflow_dispatch' && inputs.tag != ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          files: |
            out\make\**\*Setup.exe
            out\make\**\RELEASES
            out\make\**\*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload CI artifacts (always)
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist
          path: |
            out\make\**\*Setup.exe
            out\make\**\RELEASES
            out\make\**\*.nupkg
