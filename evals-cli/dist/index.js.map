{"version":3,"sources":["../src/index.ts","../src/evals/index.ts","../src/utils/logger.ts","../src/evals/runner.ts","../../node_modules/convex/src/index.ts","../../node_modules/convex/src/values/base64.ts","../../node_modules/convex/src/common/index.ts","../../node_modules/convex/src/values/value.ts","../../node_modules/convex/src/values/errors.ts","../../node_modules/convex/src/values/compare_utf8.ts","../../node_modules/convex/src/browser/logging.ts","../../node_modules/convex/src/server/functionName.ts","../../node_modules/convex/src/server/components/paths.ts","../../node_modules/convex/src/server/api.ts","../../node_modules/convex/src/browser/long.ts","../../node_modules/jwt-decode/build/esm/index.js","../../node_modules/convex/src/browser/sync/authentication_manager.ts","../../node_modules/convex/src/browser/http_client.ts","../../node_modules/convex/src/browser/simple_client.ts","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/stream.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/constants.js","../../node_modules/common/temp/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/node-gyp-build.js","../../node_modules/common/temp/node_modules/.pnpm/node-gyp-build@4.8.4/node_modules/node-gyp-build/index.js","../../node_modules/common/temp/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/fallback.js","../../node_modules/common/temp/node_modules/.pnpm/bufferutil@4.0.9/node_modules/bufferutil/index.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/buffer-util.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/limiter.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/permessage-deflate.js","../../node_modules/common/temp/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/fallback.js","../../node_modules/common/temp/node_modules/.pnpm/utf-8-validate@5.0.10/node_modules/utf-8-validate/index.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/validation.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/receiver.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/sender.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/event-target.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/extension.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/subprotocol.js","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/lib/websocket-server.js","../../node_modules/convex/src/browser/simple_client-node.ts","../../node_modules/common/temp/node_modules/.pnpm/ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ws/wrapper.mjs","../src/db/index.ts","../src/db/user.ts","../src/db/tests.ts","../src/utils/validators.ts","../../shared/tools.ts","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/Options.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/Refs.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/errorMessages.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/getRelativePath.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/zodV3V4Compat.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/any.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/array.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/bigint.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/boolean.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/branded.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/catch.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/date.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/default.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/effects.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/enum.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/intersection.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/literal.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/string.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/record.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/map.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/nativeEnum.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/never.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/null.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/nullable.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/number.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/object.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/optional.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/pipeline.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/promise.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/set.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/tuple.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/undefined.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/union.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/unknown.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parsers/readonly.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/selectParser.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/parseDef.js","../../node_modules/@alcyone-labs/zod-to-json-schema/dist/esm/zodToJsonSchema.js","../src/utils/helpers.ts","../src/evals/evaluator.ts","../src/utils/user-id.ts","../src/utils/hog.ts","../package.json"],"sourcesContent":["import { config } from \"dotenv\";\nimport { Command } from \"commander\";\nimport { createRequire } from \"module\";\nimport path from \"path\";\nimport { existsSync } from \"fs\";\nimport { fileURLToPath } from \"url\";\nimport { evalsCommand } from \"./evals/index\";\nimport updateNotifier from \"update-notifier\";\nimport packageJson from \"../package.json\" assert { type: \"json\" };\nconst require = createRequire(import.meta.url);\n\nupdateNotifier({ pkg: packageJson, updateCheckInterval: 0 }).notify();\n\nconst { name, version } = require(\"../package.json\") as {\n  name: string;\n  version: string;\n};\n\nupdateNotifier({ pkg: { name, version } }).notify();\n\n// Load environment file: prefer .env.development if it exists, else .env.production\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\nconst packageRootDir = path.resolve(__dirname, \"..\");\nconst devEnvPath = path.join(packageRootDir, \".env.development\");\nconst prodEnvPath = path.join(packageRootDir, \".env.production\");\nconst envFile = existsSync(devEnvPath) ? devEnvPath : prodEnvPath;\nconfig({ path: envFile, quiet: true });\n\nconst program = new Command();\n\nprogram\n  .name(\"mcpjam\")\n  .description(\"MCPJam CLI for programmatic MCP testing\")\n  .version(version);\n\nprogram.addCommand(evalsCommand);\n\nprogram.parse();\n","import { Command } from \"commander\";\nimport { readFile } from \"fs/promises\";\nimport { resolve } from \"path\";\nimport { Logger } from \"../utils/logger.js\";\nimport { runEvals } from \"./runner.js\";\nimport { hogClient } from \"../utils/hog.js\";\nimport { getUserId } from \"../utils/user-id.js\";\n\n// node dist/index.js evals run -t examples/test-servers.json -e examples/mcp-environment.json\n\nexport const evalsCommand = new Command(\"evals\");\n\nevalsCommand\n  .description(\"Run MCP evaluations\")\n  .command(\"run\")\n  .description(\"Run tests against MCP servers\")\n  .requiredOption(\"-t, --tests <file>\", \"Path to tests JSON file\")\n  .requiredOption(\"-e, --environment <file>\", \"Path to environment JSON file\")\n  .requiredOption(\"-l, --llms <file>\", \"Path to LLMs JSON file\")\n  .option(\"-a, --api-key <key>\", \"Personal access key\")\n  .action(async (options) => {\n    try {\n      hogClient.capture({\n        distinctId: getUserId(),\n        event: \"evals cli ran\",\n        properties: {\n          environment: process.env.ENVIRONMENT,\n        },\n      });\n      const testsContent = await readFile(resolve(options.tests), \"utf8\");\n      const testsData = JSON.parse(testsContent);\n\n      // Read and parse environment file\n      const envContent = await readFile(resolve(options.environment), \"utf8\");\n      const envData = JSON.parse(envContent);\n\n      // Read and parse LLMs file\n      const llmsContent = await readFile(resolve(options.llms), \"utf8\");\n      const llmsData = JSON.parse(llmsContent);\n\n      // Read API token (optional)\n      const apiKey = options.apiKey;\n      runEvals(testsData, envData, llmsData, apiKey);\n    } catch (error) {\n      Logger.error(error instanceof Error ? error.message : String(error));\n      process.exit(1);\n    }\n  });\n","import chalk from \"chalk\";\nimport type { ModelMessage } from \"ai\";\n\ntype MessageContent = string | Record<string, unknown> | MessageContent[];\n\ntype ToolSummaryOptions = {\n  expected: string[];\n  actual: string[];\n  passed: boolean;\n  missing?: string[];\n  unexpected?: string[];\n};\n\ntype ConversationOptions = {\n  messages: ModelMessage[];\n};\n\ntype ToolCallSummary = {\n  toolName: string;\n  args?: string;\n};\n\ntype RunResultOptions = {\n  passed: boolean;\n  durationMs: number;\n  usage?: {\n    inputTokens?: number;\n    outputTokens?: number;\n    totalTokens?: number;\n  };\n};\n\ntype RunStartOptions = {\n  runNumber: number;\n  totalRuns: number;\n  provider?: string;\n  model?: string;\n  temperature?: number;\n};\n\nconst MAX_CONTENT_LENGTH = 160;\n\nexport class Logger {\n  private static activeStream: {\n    role: ModelMessage[\"role\"];\n  } | null = null;\n\n  private static closeActiveStream(): void {\n    if (this.activeStream) {\n      process.stdout.write(\"\\n\");\n      this.activeStream = null;\n    }\n  }\n\n  private static startStream(role: ModelMessage[\"role\"]): void {\n    this.closeActiveStream();\n    const prefix = this.colorRole(role) + \": \";\n    process.stdout.write(prefix);\n    this.activeStream = { role };\n  }\n\n  private static appendToStream(text: string): void {\n    if (!this.activeStream) {\n      this.startStream(\"assistant\");\n    }\n    process.stdout.write(text);\n  }\n\n  private static logLine(text: string): void {\n    this.closeActiveStream();\n    console.log(text);\n  }\n\n  private static logMultiline(text: string): void {\n    text.split(\"\\n\").forEach((line) => this.logLine(line));\n  }\n\n  static suiteIntro(options: { testCount: number; startedAt: Date }): void {\n    const { testCount, startedAt } = options;\n    this.logLine(\n      chalk.bold.blue(\n        `▸ Running ${testCount} test${testCount === 1 ? \"\" : \"s\"} (${startedAt.toISOString()})`,\n      ),\n    );\n  }\n\n  static suiteComplete(options: {\n    durationMs: number;\n    passed: number;\n    failed: number;\n  }): void {\n    const { durationMs, passed, failed } = options;\n    const total = passed + failed;\n    const summary = `${passed}/${total} passed • ${this.formatDuration(durationMs)}`;\n    const prefix = failed === 0 ? chalk.green(\"✔\") : chalk.red(\"✖\");\n    this.logLine(`${prefix} ${summary}`);\n  }\n\n  static header(version: string): void {\n    this.logLine(chalk.bold.blue(`MCPJAM CLI ${version}`));\n    this.logLine(\"\");\n  }\n\n  static initiateTestMessage(\n    serverCount: number,\n    toolCount: number,\n    serverNames: string[],\n    testCount: number,\n  ): void {\n    this.logLine(\"\");\n    this.logLine(chalk.bold.blue(\"Running tests\"));\n\n    const serverLabel = serverCount === 1 ? \"server\" : \"servers\";\n    const serverList = serverNames.length > 0 ? serverNames.join(\", \") : \"none\";\n    this.logLine(\n      `Connected to ${chalk.white.bold(serverCount)} ${serverLabel}: ${chalk.gray(serverList)}`,\n    );\n\n    const toolLabel = toolCount === 1 ? \"tool\" : \"tools\";\n    this.logLine(`Found ${chalk.white.bold(toolCount)} total ${toolLabel}`);\n\n    const testLabel = testCount === 1 ? \"test\" : \"tests\";\n    this.logLine(`Running ${chalk.white.bold(testCount)} ${testLabel}`);\n\n    this.logLine(\"\");\n  }\n\n  static logTestGroupTitle(\n    testNumber: number,\n    testName: string,\n    modelProvider: string,\n    modelId: string,\n  ): void {\n    this.logLine(chalk.cyan.bold(`Test ${testNumber}: ${testName}`));\n    this.logLine(chalk.gray(`Using ${modelProvider}:${modelId}`));\n    this.logLine(\"\");\n  }\n\n  static testRunStart(options: RunStartOptions): void {\n    const { runNumber, totalRuns } = options;\n\n    const parts = [`run ${runNumber}/${totalRuns}`];\n    this.logLine(chalk.cyanBright(parts.join(\" • \")));\n  }\n\n  static conversation(options: ConversationOptions): void {\n    const { messages } = options;\n\n    this.closeActiveStream();\n\n    if (!messages.length) {\n      this.logLine(chalk.dim(\"(no messages)\"));\n      return;\n    }\n\n    messages.forEach((message, index) => {\n      if (index > 0) {\n        this.logLine(\"\");\n      }\n\n      const roleLabel = this.colorRole(message.role);\n\n      if (message.role === \"assistant\") {\n        const summary = this.summarizeContent(\n          message.content as MessageContent,\n        );\n\n        this.logMessageLines(roleLabel, summary.textLines);\n        summary.toolCalls.forEach((toolCall) => {\n          this.logToolCall(toolCall);\n        });\n        return;\n      }\n\n      const formatted = this.formatMessageContent(\n        message.content as MessageContent,\n      );\n      const lines = formatted ? formatted.split(\"\\n\") : [];\n      this.logMessageLines(roleLabel, lines);\n    });\n  }\n\n  static toolSummary(options: ToolSummaryOptions) {\n    const { expected, actual } = options;\n\n    this.logLine(`Expected: [${expected.join(\", \") || \"—\"}]`);\n    this.logLine(`Actual:   [${actual.join(\", \") || \"—\"}]`);\n  }\n\n  static testRunResult(options: RunResultOptions): void {\n    const { passed, durationMs, usage } = options;\n    const status = passed ? chalk.green(\"PASS\") : chalk.red(\"FAIL\");\n    this.logLine(`${status} (${this.formatDuration(durationMs)})`);\n    if (usage) {\n      const usageParts: string[] = [];\n\n      if (typeof usage.inputTokens === \"number\") {\n        usageParts.push(`input ${usage.inputTokens}`);\n      }\n\n      if (typeof usage.outputTokens === \"number\") {\n        usageParts.push(`output ${usage.outputTokens}`);\n      }\n\n      if (typeof usage.totalTokens === \"number\") {\n        usageParts.push(`total ${usage.totalTokens}`);\n      }\n\n      if (usageParts.length > 0) {\n        this.logLine(chalk.gray(`Tokens • ${usageParts.join(\" • \")}`));\n      }\n    }\n    this.logLine(\"\");\n    this.logLine(\"\");\n  }\n\n  static info(message: string): void {\n    this.logLine(chalk.blue(`ℹ ${message}`));\n  }\n\n  static success(message: string): void {\n    this.logLine(chalk.green(`✓ ${message}`));\n  }\n\n  static error(message: string): void {\n    this.logLine(\"\");\n    this.logLine(chalk.red(`✕ Error: ${message}`));\n  }\n\n  static errorWithExit(message: string): void {\n    this.logLine(\"\");\n    this.logLine(chalk.red(`✕ Error: ${message}`));\n    process.exit(1);\n  }\n\n  static progress(current: number, total: number, testName: string): void {\n    const progress = `[${current}/${total}]`;\n    this.logLine(chalk.gray(`${progress} ${testName}...`));\n  }\n\n  static testStarting(testName: string): void {\n    this.logLine(chalk.gray(`  Running ${testName}...`));\n  }\n\n  static testError(testName: string, error: string): void {\n    this.logLine(chalk.red(`  ✕ ${testName} failed: ${error}`));\n  }\n\n  static connectionError(serverName: string, error: string): void {\n    this.logLine(chalk.red(`  ✕ Failed to connect to ${serverName}: ${error}`));\n  }\n\n  static apiKeyError(provider: string, error: string): void {\n    this.logLine(chalk.red(`  ✕ API key error for ${provider}: ${error}`));\n  }\n\n  static modelCreationError(\n    provider: string,\n    modelId: string,\n    error: string,\n  ): void {\n    this.logLine(\n      chalk.red(\n        `  ✕ Failed to create ${provider} model \"${modelId}\": ${error}`,\n      ),\n    );\n  }\n\n  private static formatMessageContent(content: MessageContent): string {\n    if (content === null || content === undefined) {\n      return this.truncate(\"(empty)\");\n    }\n\n    if (typeof content === \"string\") {\n      return this.truncate(content);\n    }\n\n    if (Array.isArray(content)) {\n      const pieces = content\n        .map((part) => this.formatMessageContent(part as MessageContent))\n        .filter(Boolean);\n      return this.truncate(pieces.join(\"\\n\"));\n    }\n\n    if (typeof content === \"object\") {\n      const typedContent = content as Record<string, unknown> & {\n        type?: string;\n      };\n\n      if (typeof typedContent.type === \"string\") {\n        const type = typedContent.type;\n\n        if (type === \"text\" && typeof typedContent.text === \"string\") {\n          return this.truncate(typedContent.text);\n        }\n\n        if (type === \"tool-call\") {\n          const toolName = typedContent.toolName ?? typedContent.name ?? \"tool\";\n          const args =\n            typedContent.args ?? typedContent.input ?? typedContent.parameters;\n          const details = args ? ` args=${this.stringify(args)}` : \"\";\n          return this.truncate(`${toolName}${details}`);\n        }\n\n        if (type === \"tool-result\") {\n          const result =\n            typedContent.result ?? typedContent.output ?? typedContent.data;\n          return this.truncate(this.stringify(result));\n        }\n\n        if (type === \"reasoning\" && typeof typedContent.text === \"string\") {\n          return this.truncate(typedContent.text);\n        }\n      }\n\n      if (typeof typedContent.text === \"string\") {\n        return this.truncate(typedContent.text);\n      }\n\n      return this.truncate(this.stringify(typedContent));\n    }\n\n    return this.truncate(String(content));\n  }\n\n  private static summarizeContent(content: MessageContent): {\n    textLines: string[];\n    toolCalls: ToolCallSummary[];\n  } {\n    const textLines: string[] = [];\n    const toolCalls: ToolCallSummary[] = [];\n\n    const visit = (value: MessageContent): void => {\n      if (value === null || value === undefined) {\n        return;\n      }\n\n      if (typeof value === \"string\") {\n        textLines.push(...this.splitAndTrim(this.truncate(value)));\n        return;\n      }\n\n      if (Array.isArray(value)) {\n        value.forEach((item) => visit(item as MessageContent));\n        return;\n      }\n\n      if (typeof value === \"object\") {\n        const typedValue = value as Record<string, unknown> & {\n          type?: string;\n        };\n\n        if (typedValue.type === \"tool-call\") {\n          const toolName =\n            (typedValue.toolName as string) ||\n            (typedValue.name as string) ||\n            \"tool\";\n          const args =\n            typedValue.args ?? typedValue.input ?? typedValue.parameters;\n          toolCalls.push({\n            toolName,\n            args: args ? this.truncate(this.stringify(args)) : undefined,\n          });\n          return;\n        }\n\n        if (typedValue.type === \"text\" && typeof typedValue.text === \"string\") {\n          textLines.push(...this.splitAndTrim(this.truncate(typedValue.text)));\n          return;\n        }\n\n        if (\n          typedValue.type === \"reasoning\" &&\n          typeof typedValue.text === \"string\"\n        ) {\n          textLines.push(...this.splitAndTrim(this.truncate(typedValue.text)));\n          return;\n        }\n\n        if (\n          typedValue.type === \"tool-result\" ||\n          typedValue.type === \"tool-error\"\n        ) {\n          const label =\n            typedValue.type === \"tool-error\" ? \"Tool error\" : \"Tool result\";\n          textLines.push(\n            `${label}: ${this.truncate(this.stringify(typedValue))}`,\n          );\n          return;\n        }\n\n        if (typeof typedValue.text === \"string\") {\n          textLines.push(...this.splitAndTrim(this.truncate(typedValue.text)));\n          return;\n        }\n\n        textLines.push(this.truncate(this.stringify(typedValue)));\n        return;\n      }\n\n      textLines.push(this.truncate(String(value)));\n    };\n\n    visit(content);\n\n    const normalizedTextLines = textLines.length\n      ? textLines\n      : toolCalls.length\n        ? []\n        : [this.truncate(\"(no content)\")];\n\n    return {\n      textLines: normalizedTextLines,\n      toolCalls,\n    };\n  }\n\n  private static splitAndTrim(text: string): string[] {\n    return text\n      .split(\"\\n\")\n      .map((line) => line.trim())\n      .filter((line) => line.length > 0);\n  }\n\n  private static logMessageLines(roleLabel: string, lines: string[]): void {\n    if (!lines.length) {\n      this.logLine(`${roleLabel}:`);\n      return;\n    }\n\n    this.logLine(`${roleLabel}: ${lines[0]}`);\n    for (let i = 1; i < lines.length; i++) {\n      this.logLine(lines[i] ?? \"\");\n    }\n  }\n\n  private static logToolCall(toolCall: ToolCallSummary): void {\n    const header = chalk.whiteBright(`[tool-call] ${toolCall.toolName}`);\n    this.logLine(header);\n    const jsonArgs = toolCall.args ? JSON.parse(toolCall.args) : null;\n    if (toolCall.args) {\n      this.logLine(chalk.gray(this.truncate(toolCall.args)));\n    }\n  }\n\n  static beginStreamingMessage(role: ModelMessage[\"role\"]): void {\n    this.startStream(role);\n  }\n\n  static appendStreamingText(text: string): void {\n    if (!text) {\n      return;\n    }\n    this.appendToStream(text);\n  }\n\n  static finishStreamingMessage(): void {\n    this.closeActiveStream();\n  }\n\n  static streamToolCall(toolName: string, args: unknown): void {\n    const serializedArgs =\n      args === undefined ? undefined : this.truncate(this.stringify(args));\n    this.closeActiveStream();\n    this.logToolCall({ toolName, args: serializedArgs });\n  }\n\n  static streamToolResult(toolName: string, output: unknown): void {\n    this.closeActiveStream();\n    const header = chalk.whiteBright(`[tool-result] ${toolName}`);\n    this.logLine(header);\n    if (output !== undefined) {\n      this.logLine(chalk.gray(this.truncate(this.stringify(output))));\n    }\n  }\n\n  static streamToolError(toolName: string, error: unknown): void {\n    this.closeActiveStream();\n    const header = chalk.whiteBright(`[tool-error] ${toolName}`);\n    this.logLine(header);\n    this.logLine(\n      chalk.red(this.truncate(this.stringify(error ?? \"Unknown error\"))),\n    );\n  }\n\n  private static renderBox(\n    lines: string[],\n    options: {\n      borderColor: (text: string) => string;\n      statusColor: (text: string) => string;\n    },\n  ): void {\n    if (!lines.length) {\n      return;\n    }\n\n    const { borderColor, statusColor } = options;\n    const statusIndex = lines.findIndex((line) => line.startsWith(\"Status:\"));\n    const width = lines.reduce((max, line) => Math.max(max, line.length), 0);\n    const horizontal = borderColor(`+${\"-\".repeat(width + 2)}+`);\n    this.logLine(horizontal);\n\n    lines.forEach((line, index) => {\n      const padded = line.padEnd(width, \" \");\n      const isStatusLine = index === statusIndex;\n      const colouredContent = isStatusLine\n        ? statusColor(padded)\n        : chalk.white(padded);\n      this.logLine(\n        `${borderColor(\"| \")}${colouredContent}${borderColor(\" |\")}`,\n      );\n    });\n\n    this.logLine(horizontal);\n  }\n\n  private static stringify(value: unknown): string {\n    if (typeof value === \"string\") {\n      return value;\n    }\n\n    try {\n      return JSON.stringify(value, null, 2);\n    } catch (error) {\n      return String(value);\n    }\n  }\n\n  private static truncate(text: string): string {\n    const trimmed = text.trim();\n    if (trimmed.length <= MAX_CONTENT_LENGTH) {\n      return trimmed;\n    }\n    return `${trimmed.slice(0, MAX_CONTENT_LENGTH - 3).trimEnd()}...`;\n  }\n\n  private static formatDuration(durationMs: number): string {\n    if (!Number.isFinite(durationMs) || durationMs < 0) {\n      return \"?\";\n    }\n\n    if (durationMs < 1000) {\n      return `${durationMs.toFixed(0)}ms`;\n    }\n\n    const seconds = durationMs / 1000;\n    if (seconds < 60) {\n      return `${seconds.toFixed(1)}s`;\n    }\n\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = (seconds % 60).toFixed(0).padStart(2, \"0\");\n    return `${minutes}m${remainingSeconds}s`;\n  }\n\n  private static colorRole(role: ModelMessage[\"role\"]): string {\n    switch (role) {\n      case \"user\":\n        return chalk.bold.whiteBright(\"user\");\n      case \"assistant\":\n        return chalk.bold.whiteBright(\"assistant\");\n      case \"tool\":\n        return chalk.bold.whiteBright(\"tool\");\n      case \"system\":\n        return chalk.bold.whiteBright(\"system\");\n      default:\n        return chalk.cyan(role);\n    }\n  }\n}\n","import { MCPClient, MCPClientOptions } from \"@mastra/mcp\";\nimport { streamText, Tool, ToolChoice, ModelMessage, LanguageModel } from \"ai\";\nimport { getUserIdFromApiKeyOrNull } from \"../db/user\";\nimport {\n  createPersistenceContext,\n  ensureSuiteRecord,\n  createTestCaseRecord,\n  createIterationRecord,\n  updateIterationResult,\n  updateTestCaseResult,\n  markSuiteFailed,\n  finalizeSuiteStatus,\n  type ConfigSummary,\n  type PersistenceContext,\n  type UsageTotals,\n} from \"../db/tests\";\nimport {\n  convertMastraToolsToVercelTools,\n  validateAndNormalizeMCPClientConfiguration,\n  validateLlms,\n  validateTestCase,\n  LlmsConfig,\n  TestCase,\n} from \"../utils/validators\";\nimport { createLlmModel, extractToolNamesAsArray } from \"../utils/helpers\";\nimport { Logger } from \"../utils/logger\";\nimport { evaluateResults } from \"./evaluator\";\nimport { getUserId } from \"../utils/user-id\";\nimport { hogClient } from \"../utils/hog\";\n\nconst MAX_STEPS = 20;\n\ntype ToolMap = Record<string, Tool>;\ntype EvaluationResult = ReturnType<typeof evaluateResults>;\n\nconst accumulateTokenCount = (\n  current: number | undefined,\n  increment: number | undefined,\n): number | undefined => {\n  if (typeof increment !== \"number\" || Number.isNaN(increment)) {\n    return current;\n  }\n\n  return (current ?? 0) + increment;\n};\n\nconst ensureApiKeyIsValid = async (apiKey?: string) => {\n  if (!apiKey) {\n    return;\n  }\n\n  await getUserIdFromApiKeyOrNull(apiKey);\n};\n\nconst prepareSuite = async (\n  tests: unknown,\n  environment: unknown,\n  llms: unknown,\n) => {\n  const mcpClientOptions = validateAndNormalizeMCPClientConfiguration(\n    environment,\n  ) as MCPClientOptions;\n  const validatedTests = validateTestCase(tests) as TestCase[];\n  const validatedLlms = validateLlms(llms) as LlmsConfig;\n\n  const mcpClient = new MCPClient(mcpClientOptions);\n  const availableTools = await mcpClient.getTools();\n  const vercelTools = convertMastraToolsToVercelTools(availableTools);\n\n  const serverNames = Object.keys(mcpClientOptions.servers);\n\n  Logger.initiateTestMessage(\n    serverNames.length,\n    Object.keys(availableTools).length,\n    serverNames,\n    validatedTests.length,\n  );\n\n  return {\n    validatedTests,\n    validatedLlms,\n    vercelTools,\n    serverNames,\n  };\n};\n\ntype RunIterationParams = {\n  test: TestCase;\n  runIndex: number;\n  totalRuns: number;\n  llms: LlmsConfig;\n  tools: ToolMap;\n  persistence: PersistenceContext;\n  testCaseId?: string;\n};\n\nconst runIteration = async ({\n  test,\n  runIndex,\n  totalRuns,\n  llms,\n  tools,\n  persistence,\n  testCaseId,\n}: RunIterationParams): Promise<EvaluationResult> => {\n  const { provider, model, advancedConfig, query } = test;\n  const { system, temperature, toolChoice } = advancedConfig ?? {};\n\n  Logger.testRunStart({\n    runNumber: runIndex + 1,\n    totalRuns,\n    provider,\n    model,\n    temperature,\n  });\n\n  if (system) {\n    Logger.conversation({ messages: [{ role: \"system\", content: system }] });\n  }\n\n  const userMessage: ModelMessage = {\n    role: \"user\",\n    content: query,\n  };\n\n  Logger.conversation({ messages: [userMessage] });\n\n  const messageHistory: ModelMessage[] = [userMessage];\n  const toolsCalled: string[] = [];\n  let inputTokensUsed: number | undefined;\n  let outputTokensUsed: number | undefined;\n  let totalTokensUsed: number | undefined;\n  let stepCount = 0;\n\n  const runStartedAt = Date.now();\n  const evalTestId = await createIterationRecord(\n    persistence,\n    testCaseId,\n    runIndex + 1,\n    runStartedAt,\n  );\n\n  while (stepCount < MAX_STEPS) {\n    let assistantStreaming = false;\n\n    const streamResult = await streamText({\n      model: createLlmModel(provider, model, llms) as LanguageModel,\n      system,\n      temperature,\n      tools,\n      toolChoice: toolChoice as ToolChoice<Record<string, Tool>> | undefined,\n      messages: messageHistory,\n      onChunk: async (chunk) => {\n        switch (chunk.chunk.type) {\n          case \"text-delta\":\n          case \"reasoning-delta\": {\n            if (!assistantStreaming) {\n              Logger.beginStreamingMessage(\"assistant\");\n              assistantStreaming = true;\n            }\n            Logger.appendStreamingText(chunk.chunk.text);\n            break;\n          }\n          case \"tool-call\": {\n            if (assistantStreaming) {\n              Logger.finishStreamingMessage();\n              assistantStreaming = false;\n            }\n            Logger.streamToolCall(chunk.chunk.toolName, chunk.chunk.input);\n            break;\n          }\n          case \"tool-result\": {\n            Logger.streamToolResult(chunk.chunk.toolName, chunk.chunk.output);\n            break;\n          }\n          default:\n            break;\n        }\n      },\n    });\n\n    await streamResult.consumeStream();\n\n    if (assistantStreaming) {\n      Logger.finishStreamingMessage();\n      assistantStreaming = false;\n    }\n\n    const stepUsage = await streamResult.usage;\n    const cumulativeUsage = await streamResult.totalUsage;\n\n    inputTokensUsed = accumulateTokenCount(\n      inputTokensUsed,\n      stepUsage.inputTokens,\n    );\n    outputTokensUsed = accumulateTokenCount(\n      outputTokensUsed,\n      stepUsage.outputTokens,\n    );\n\n    const totalTokens = stepUsage.totalTokens ?? cumulativeUsage.totalTokens;\n    totalTokensUsed = accumulateTokenCount(totalTokensUsed, totalTokens);\n\n    const toolNamesForStep = extractToolNamesAsArray(\n      await streamResult.toolCalls,\n    );\n    if (toolNamesForStep.length) {\n      toolsCalled.push(...toolNamesForStep);\n    }\n\n    const responseMessages = ((await streamResult.response)?.messages ??\n      []) as ModelMessage[];\n    if (responseMessages.length) {\n      messageHistory.push(...responseMessages);\n    }\n\n    stepCount++;\n\n    const finishReason = await streamResult.finishReason;\n    if (finishReason !== \"tool-calls\") {\n      break;\n    }\n  }\n\n  Logger.finishStreamingMessage();\n\n  const evaluation = evaluateResults(test.expectedToolCalls, toolsCalled);\n  const usage: UsageTotals = {\n    inputTokens: inputTokensUsed,\n    outputTokens: outputTokensUsed,\n    totalTokens: totalTokensUsed,\n  };\n\n  Logger.toolSummary({\n    expected: evaluation.expectedToolCalls,\n    actual: evaluation.toolsCalled,\n    missing: evaluation.missing,\n    unexpected: evaluation.unexpected,\n    passed: evaluation.passed,\n  });\n\n  Logger.testRunResult({\n    passed: evaluation.passed,\n    durationMs: Date.now() - runStartedAt,\n    usage:\n      usage.inputTokens !== undefined ||\n      usage.outputTokens !== undefined ||\n      usage.totalTokens !== undefined\n        ? usage\n        : undefined,\n  });\n\n  if (!evaluation.passed) {\n    await markSuiteFailed(persistence);\n  }\n\n  await updateIterationResult(\n    persistence,\n    evalTestId,\n    evaluation.passed,\n    toolsCalled,\n    usage,\n    messageHistory,\n  );\n\n  return evaluation;\n};\n\ntype RunTestCaseParams = {\n  test: TestCase;\n  testIndex: number;\n  llms: LlmsConfig;\n  tools: ToolMap;\n  persistence: PersistenceContext;\n};\n\nconst runTestCase = async ({\n  test,\n  testIndex,\n  llms,\n  tools,\n  persistence,\n}: RunTestCaseParams) => {\n  const { runs, model, provider } = test;\n\n  Logger.logTestGroupTitle(testIndex, test.title, provider, model);\n\n  let passedRuns = 0;\n  let failedRuns = 0;\n\n  const testCaseId = await createTestCaseRecord(persistence, test, testIndex);\n\n  for (let runIndex = 0; runIndex < runs; runIndex++) {\n    const evaluation = await runIteration({\n      test,\n      runIndex,\n      totalRuns: runs,\n      llms,\n      tools,\n      persistence,\n      testCaseId,\n    });\n\n    if (evaluation.passed) {\n      passedRuns++;\n    } else {\n      failedRuns++;\n    }\n  }\n\n  await updateTestCaseResult(persistence, testCaseId, passedRuns, failedRuns);\n\n  return { passedRuns, failedRuns };\n};\n\nexport const runEvals = async (\n  tests: unknown,\n  environment: unknown,\n  llms: unknown,\n  apiKey?: string,\n) => {\n  await ensureApiKeyIsValid(apiKey);\n\n  const { validatedTests, validatedLlms, vercelTools, serverNames } =\n    await prepareSuite(tests, environment, llms);\n\n  const suiteStartedAt = Date.now();\n  const totalPlannedTests = validatedTests.reduce(\n    (sum, current) => sum + (current?.runs ?? 0),\n    0,\n  );\n\n  const configSummary: ConfigSummary = {\n    tests: validatedTests,\n    environment: { servers: serverNames },\n    llms: Object.keys(validatedLlms ?? {}),\n  };\n\n  const persistence = createPersistenceContext(\n    apiKey,\n    configSummary,\n    totalPlannedTests,\n  );\n  await ensureSuiteRecord(persistence);\n\n  let passedRuns = 0;\n  let failedRuns = 0;\n\n  for (let index = 0; index < validatedTests.length; index++) {\n    const test = validatedTests[index];\n    if (!test) {\n      continue;\n    }\n    const { passedRuns: casePassed, failedRuns: caseFailed } =\n      await runTestCase({\n        test,\n        testIndex: index + 1,\n        llms: validatedLlms,\n        tools: vercelTools,\n        persistence,\n      });\n    passedRuns += casePassed;\n    failedRuns += caseFailed;\n  }\n  hogClient.capture({\n    distinctId: getUserId(),\n    event: \"evals suite complete\",\n    properties: {\n      environment: process.env.ENVIRONMENT,\n    },\n  });\n  Logger.suiteComplete({\n    durationMs: Date.now() - suiteStartedAt,\n    passed: passedRuns,\n    failed: failedRuns,\n  });\n\n  await finalizeSuiteStatus(persistence, failedRuns);\n};\n","export const version = \"1.27.3\";\n","/*\nhttps://github.com/beatgammit/base64-js/blob/88957c9943c7e2a0f03cdf73e71d579e433627d3/index.js\nCopyright (c) 2014 Jameson Little\nThe MIT License (MIT)\n*/\n\n// Vendored because this library has no ESM build, and some environments\n// (SvelteKit) are happiest when all dependencies are ESM.\n\nvar lookup: string[] = [];\nvar revLookup: number[] = [];\nvar Arr = Uint8Array;\n\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\n\nfunction getLens(b64: string) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf(\"=\");\n  if (validLen === -1) validLen = len;\n\n  var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);\n\n  return [validLen, placeHoldersLen];\n}\n\n// base64 is 4/3 + up to two characters of the original data\n/** @public */\nexport function byteLength(b64: string): number {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(_b64: string, validLen: number, placeHoldersLen: number) {\n  return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;\n}\n\n/** @public */\nexport function toByteArray(b64: string): Uint8Array {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n\n  var curByte = 0;\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = (tmp >> 16) & 0xff;\n    arr[curByte++] = (tmp >> 8) & 0xff;\n    arr[curByte++] = tmp & 0xff;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[curByte++] = tmp & 0xff;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[curByte++] = (tmp >> 8) & 0xff;\n    arr[curByte++] = tmp & 0xff;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num: number) {\n  return (\n    lookup[(num >> 18) & 0x3f] +\n    lookup[(num >> 12) & 0x3f] +\n    lookup[(num >> 6) & 0x3f] +\n    lookup[num & 0x3f]\n  );\n}\n\nfunction encodeChunk(uint8: Uint8Array, start: number, end: number) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xff0000) +\n      ((uint8[i + 1] << 8) & 0xff00) +\n      (uint8[i + 2] & 0xff);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join(\"\");\n}\n\n/** @public */\nexport function fromByteArray(uint8: Uint8Array): string {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(\n      encodeChunk(\n        uint8,\n        i,\n        i + maxChunkLength > len2 ? len2 : i + maxChunkLength,\n      ),\n    );\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f] + \"==\");\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] +\n        lookup[(tmp >> 4) & 0x3f] +\n        lookup[(tmp << 2) & 0x3f] +\n        \"=\",\n    );\n  }\n\n  return parts.join(\"\");\n}\n\nexport function fromByteArrayUrlSafeNoPadding(uint8: Uint8Array): string {\n  return fromByteArray(uint8)\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=/g, \"\");\n}\n","import type { Value } from \"../values/value.js\";\n\n/**\n * Validate that the arguments to a Convex function are an object, defaulting\n * `undefined` to `{}`.\n */\nexport function parseArgs(\n  args: Record<string, Value> | undefined,\n): Record<string, Value> {\n  if (args === undefined) {\n    return {};\n  }\n  if (!isSimpleObject(args)) {\n    throw new Error(\n      `The arguments to a Convex function must be an object. Received: ${\n        args as any\n      }`,\n    );\n  }\n  return args;\n}\n\nexport function validateDeploymentUrl(deploymentUrl: string) {\n  // Don't use things like `new URL(deploymentUrl).hostname` since these aren't\n  // supported by React Native's JS environment\n  if (typeof deploymentUrl === \"undefined\") {\n    throw new Error(\n      `Client created with undefined deployment address. If you used an environment variable, check that it's set.`,\n    );\n  }\n  if (typeof deploymentUrl !== \"string\") {\n    throw new Error(\n      `Invalid deployment address: found ${deploymentUrl as any}\".`,\n    );\n  }\n  if (\n    !(deploymentUrl.startsWith(\"http:\") || deploymentUrl.startsWith(\"https:\"))\n  ) {\n    throw new Error(\n      `Invalid deployment address: Must start with \"https://\" or \"http://\". Found \"${deploymentUrl}\".`,\n    );\n  }\n\n  // Most clients should connect to \".convex.cloud\". But we also support localhost and\n  // custom custom. We validate the deployment url is a valid url, which is the most\n  // common failure pattern.\n  try {\n    new URL(deploymentUrl);\n  } catch {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" is not a valid URL. If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`,\n    );\n  }\n\n  // If a user uses .convex.site, this is very likely incorrect.\n  if (deploymentUrl.endsWith(\".convex.site\")) {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" ends with .convex.site, which is used for HTTP Actions. Convex deployment URLs typically end with .convex.cloud? If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`,\n    );\n  }\n}\n\n/**\n * Check whether a value is a plain old JavaScript object.\n */\nexport function isSimpleObject(value: unknown) {\n  const isObject = typeof value === \"object\";\n  const prototype = Object.getPrototypeOf(value);\n  const isSimple =\n    prototype === null ||\n    prototype === Object.prototype ||\n    // Objects generated from other contexts (e.g. across Node.js `vm` modules) will not satisfy the previous\n    // conditions but are still simple objects.\n    prototype?.constructor?.name === \"Object\";\n  return isObject && isSimple;\n}\n","/**\n * Utilities for working with values stored in Convex.\n *\n * You can see the full set of supported types at\n * [Types](https://docs.convex.dev/using/types).\n * @module\n */\nimport * as Base64 from \"./base64.js\";\nimport { isSimpleObject } from \"../common/index.js\";\n\nconst LITTLE_ENDIAN = true;\n// This code is used by code that may not have bigint literals.\nconst MIN_INT64 = BigInt(\"-9223372036854775808\");\nconst MAX_INT64 = BigInt(\"9223372036854775807\");\nconst ZERO = BigInt(\"0\");\nconst EIGHT = BigInt(\"8\");\nconst TWOFIFTYSIX = BigInt(\"256\");\n\n/**\n * The type of JavaScript values serializable to JSON.\n *\n * @public\n */\nexport type JSONValue =\n  | null\n  | boolean\n  | number\n  | string\n  | JSONValue[]\n  | { [key: string]: JSONValue };\n\n/**\n * An identifier for a document in Convex.\n *\n * Convex documents are uniquely identified by their `Id`, which is accessible\n * on the `_id` field. To learn more, see [Document IDs](https://docs.convex.dev/database/document-ids).\n *\n * Documents can be loaded using `db.get(id)` in query and mutation functions.\n *\n * IDs are base 32 encoded strings which are URL safe.\n *\n * IDs are just strings at runtime, but this type can be used to distinguish them from other\n * strings at compile time.\n *\n * If you're using code generation, use the `Id` type generated for your data model in\n * `convex/_generated/dataModel.d.ts`.\n *\n * @typeParam TableName - A string literal type of the table name (like \"users\").\n *\n * @public\n */\nexport type Id<TableName extends string> = string & { __tableName: TableName };\n\n/**\n * A value supported by Convex.\n *\n * Values can be:\n * - stored inside of documents.\n * - used as arguments and return types to queries and mutation functions.\n *\n * You can see the full set of supported types at\n * [Types](https://docs.convex.dev/using/types).\n *\n * @public\n */\nexport type Value =\n  | null\n  | bigint\n  | number\n  | boolean\n  | string\n  | ArrayBuffer\n  | Value[]\n  | { [key: string]: undefined | Value };\n\n/**\n * The types of {@link Value} that can be used to represent numbers.\n *\n * @public\n */\nexport type NumericValue = bigint | number;\n\nfunction isSpecial(n: number) {\n  return Number.isNaN(n) || !Number.isFinite(n) || Object.is(n, -0);\n}\n\nexport function slowBigIntToBase64(value: bigint): string {\n  // the conversion is easy if we pretend it's unsigned\n  if (value < ZERO) {\n    value -= MIN_INT64 + MIN_INT64;\n  }\n  let hex = value.toString(16);\n  if (hex.length % 2 === 1) hex = \"0\" + hex;\n\n  const bytes = new Uint8Array(new ArrayBuffer(8));\n  let i = 0;\n  for (const hexByte of hex.match(/.{2}/g)!.reverse()) {\n    bytes.set([parseInt(hexByte, 16)], i++);\n    value >>= EIGHT;\n  }\n  return Base64.fromByteArray(bytes);\n}\n\nexport function slowBase64ToBigInt(encoded: string): bigint {\n  const integerBytes = Base64.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`,\n    );\n  }\n  let value = ZERO;\n  let power = ZERO;\n  for (const byte of integerBytes) {\n    value += BigInt(byte) * TWOFIFTYSIX ** power;\n    power++;\n  }\n  if (value > MAX_INT64) {\n    value += MIN_INT64 + MIN_INT64;\n  }\n  return value;\n}\n\nexport function modernBigIntToBase64(value: bigint): string {\n  if (value < MIN_INT64 || MAX_INT64 < value) {\n    throw new Error(\n      `BigInt ${value} does not fit into a 64-bit signed integer.`,\n    );\n  }\n  const buffer = new ArrayBuffer(8);\n  new DataView(buffer).setBigInt64(0, value, true);\n  return Base64.fromByteArray(new Uint8Array(buffer));\n}\n\nexport function modernBase64ToBigInt(encoded: string): bigint {\n  const integerBytes = Base64.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`,\n    );\n  }\n  const intBytesView = new DataView(integerBytes.buffer);\n  return intBytesView.getBigInt64(0, true);\n}\n\n// Fall back to a slower version on Safari 14 which lacks these APIs.\nexport const bigIntToBase64 = (DataView.prototype as any).setBigInt64\n  ? modernBigIntToBase64\n  : slowBigIntToBase64;\nexport const base64ToBigInt = (DataView.prototype as any).getBigInt64\n  ? modernBase64ToBigInt\n  : slowBase64ToBigInt;\n\nconst MAX_IDENTIFIER_LEN = 1024;\n\nfunction validateObjectField(k: string) {\n  if (k.length > MAX_IDENTIFIER_LEN) {\n    throw new Error(\n      `Field name ${k} exceeds maximum field name length ${MAX_IDENTIFIER_LEN}.`,\n    );\n  }\n  if (k.startsWith(\"$\")) {\n    throw new Error(`Field name ${k} starts with a '$', which is reserved.`);\n  }\n  for (let i = 0; i < k.length; i += 1) {\n    const charCode = k.charCodeAt(i);\n    // Non-control ASCII characters\n    if (charCode < 32 || charCode >= 127) {\n      throw new Error(\n        `Field name ${k} has invalid character '${k[i]}': Field names can only contain non-control ASCII characters`,\n      );\n    }\n  }\n}\n\n/**\n * Parse a Convex value from its JSON representation.\n *\n * This function will deserialize serialized Int64s to `BigInt`s, Bytes to `ArrayBuffer`s etc.\n *\n * To learn more about Convex values, see [Types](https://docs.convex.dev/using/types).\n *\n * @param value - The JSON representation of a Convex value previously created with {@link convexToJson}.\n * @returns The JavaScript representation of the Convex value.\n *\n * @public\n */\nexport function jsonToConvex(value: JSONValue): Value {\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map((value) => jsonToConvex(value));\n  }\n  if (typeof value !== \"object\") {\n    throw new Error(`Unexpected type of ${value as any}`);\n  }\n  const entries = Object.entries(value);\n  if (entries.length === 1) {\n    const key = entries[0][0];\n    if (key === \"$bytes\") {\n      if (typeof value.$bytes !== \"string\") {\n        throw new Error(`Malformed $bytes field on ${value as any}`);\n      }\n      return Base64.toByteArray(value.$bytes).buffer;\n    }\n    if (key === \"$integer\") {\n      if (typeof value.$integer !== \"string\") {\n        throw new Error(`Malformed $integer field on ${value as any}`);\n      }\n      return base64ToBigInt(value.$integer);\n    }\n    if (key === \"$float\") {\n      if (typeof value.$float !== \"string\") {\n        throw new Error(`Malformed $float field on ${value as any}`);\n      }\n      const floatBytes = Base64.toByteArray(value.$float);\n      if (floatBytes.byteLength !== 8) {\n        throw new Error(\n          `Received ${floatBytes.byteLength} bytes, expected 8 for $float`,\n        );\n      }\n      const floatBytesView = new DataView(floatBytes.buffer);\n      const float = floatBytesView.getFloat64(0, LITTLE_ENDIAN);\n      if (!isSpecial(float)) {\n        throw new Error(`Float ${float} should be encoded as a number`);\n      }\n      return float;\n    }\n    if (key === \"$set\") {\n      throw new Error(\n        `Received a Set which is no longer supported as a Convex type.`,\n      );\n    }\n    if (key === \"$map\") {\n      throw new Error(\n        `Received a Map which is no longer supported as a Convex type.`,\n      );\n    }\n  }\n  const out: { [key: string]: Value } = {};\n  for (const [k, v] of Object.entries(value)) {\n    validateObjectField(k);\n    out[k] = jsonToConvex(v);\n  }\n  return out;\n}\n\nexport function stringifyValueForError(value: any) {\n  return JSON.stringify(value, (_key, value) => {\n    if (value === undefined) {\n      // By default `JSON.stringify` converts undefined, functions, symbols,\n      // Infinity, and NaN to null which produces a confusing error message.\n      // We deal with `undefined` specifically because it's the most common.\n      // Ideally we'd use a pretty-printing library that prints `undefined`\n      // (no quotes), but it might not be worth the bundle size cost.\n      return \"undefined\";\n    }\n    if (typeof value === \"bigint\") {\n      // `JSON.stringify` throws on bigints by default.\n      return `${value.toString()}n`;\n    }\n    return value;\n  });\n}\n\nfunction convexToJsonInternal(\n  value: Value,\n  originalValue: Value,\n  context: string,\n  includeTopLevelUndefined: boolean,\n): JSONValue {\n  if (value === undefined) {\n    const contextText =\n      context &&\n      ` (present at path ${context} in original object ${stringifyValueForError(\n        originalValue,\n      )})`;\n    throw new Error(\n      `undefined is not a valid Convex value${contextText}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`,\n    );\n  }\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"bigint\") {\n    if (value < MIN_INT64 || MAX_INT64 < value) {\n      throw new Error(\n        `BigInt ${value} does not fit into a 64-bit signed integer.`,\n      );\n    }\n    return { $integer: bigIntToBase64(value) };\n  }\n  if (typeof value === \"number\") {\n    if (isSpecial(value)) {\n      const buffer = new ArrayBuffer(8);\n      new DataView(buffer).setFloat64(0, value, LITTLE_ENDIAN);\n      return { $float: Base64.fromByteArray(new Uint8Array(buffer)) };\n    } else {\n      return value;\n    }\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (value instanceof ArrayBuffer) {\n    return { $bytes: Base64.fromByteArray(new Uint8Array(value)) };\n  }\n  if (Array.isArray(value)) {\n    return value.map((value, i) =>\n      convexToJsonInternal(value, originalValue, context + `[${i}]`, false),\n    );\n  }\n  if (value instanceof Set) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Set\", [...value], originalValue),\n    );\n  }\n  if (value instanceof Map) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Map\", [...value], originalValue),\n    );\n  }\n\n  if (!isSimpleObject(value)) {\n    const theType = value?.constructor?.name;\n    const typeName = theType ? `${theType} ` : \"\";\n    throw new Error(\n      errorMessageForUnsupportedType(context, typeName, value, originalValue),\n    );\n  }\n\n  const out: { [key: string]: JSONValue } = {};\n  const entries = Object.entries(value);\n  entries.sort(([k1, _v1], [k2, _v2]) => (k1 === k2 ? 0 : k1 < k2 ? -1 : 1));\n  for (const [k, v] of entries) {\n    if (v !== undefined) {\n      validateObjectField(k);\n      out[k] = convexToJsonInternal(v, originalValue, context + `.${k}`, false);\n    } else if (includeTopLevelUndefined) {\n      validateObjectField(k);\n      out[k] = convexOrUndefinedToJsonInternal(\n        v,\n        originalValue,\n        context + `.${k}`,\n      );\n    }\n  }\n  return out;\n}\n\nfunction errorMessageForUnsupportedType(\n  context: string,\n  typeName: string,\n  value: any,\n  originalValue: any,\n) {\n  if (context) {\n    return `${typeName}${stringifyValueForError(\n      value,\n    )} is not a supported Convex type (present at path ${context} in original object ${stringifyValueForError(\n      originalValue,\n    )}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`;\n  } else {\n    return `${typeName}${stringifyValueForError(\n      value,\n    )} is not a supported Convex type.`;\n  }\n}\n\n// convexOrUndefinedToJsonInternal wrapper exists so we can pipe through the\n// `originalValue` and `context` through for better error messaging.\nfunction convexOrUndefinedToJsonInternal(\n  value: Value | undefined,\n  originalValue: Value | undefined,\n  context: string,\n): JSONValue {\n  if (value === undefined) {\n    return { $undefined: null };\n  } else {\n    if (originalValue === undefined) {\n      // This should not happen.\n      throw new Error(\n        `Programming error. Current value is ${stringifyValueForError(\n          value,\n        )} but original value is undefined`,\n      );\n    }\n    return convexToJsonInternal(value, originalValue, context, false);\n  }\n}\n\n/**\n * Convert a Convex value to its JSON representation.\n *\n * Use {@link jsonToConvex} to recreate the original value.\n *\n * To learn more about Convex values, see [Types](https://docs.convex.dev/using/types).\n *\n * @param value - A Convex value to convert into JSON.\n * @returns The JSON representation of `value`.\n *\n * @public\n */\nexport function convexToJson(value: Value): JSONValue {\n  return convexToJsonInternal(value, value, \"\", false);\n}\n\n// Convert a Convex value or `undefined` into its JSON representation.\n// `undefined` is used in filters to represent a missing object field.\nexport function convexOrUndefinedToJson(value: Value | undefined): JSONValue {\n  return convexOrUndefinedToJsonInternal(value, value, \"\");\n}\n\n/**\n * Similar to convexToJson but also serializes top level undefined fields\n * using convexOrUndefinedToJson().\n *\n * @param value - A Convex value to convert into JSON.\n * @returns The JSON representation of `value`.\n */\nexport function patchValueToJson(value: Value): JSONValue {\n  return convexToJsonInternal(value, value, \"\", true);\n}\n","import { Value, stringifyValueForError } from \"./value.js\";\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\n\nexport class ConvexError<TData extends Value> extends Error {\n  name = \"ConvexError\";\n  data: TData;\n  [IDENTIFYING_FIELD] = true;\n\n  constructor(data: TData) {\n    super(typeof data === \"string\" ? data : stringifyValueForError(data));\n    this.data = data;\n  }\n}\n","/**\n * Taken from https://github.com/rocicorp/compare-utf8/blob/main/LICENSE\n * (Apache Version 2.0, January 2004)\n */\n\n/**\n * This is copied here instead of added as a dependency to avoid bundling issues.\n */\n\n/**\n * Compares two JavaScript strings as if they were UTF-8 encoded byte arrays.\n * @param {string} a\n * @param {string} b\n * @returns {number}\n */\nexport function compareUTF8(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const length = Math.min(aLength, bLength);\n  for (let i = 0; i < length; ) {\n    const aCodePoint = a.codePointAt(i)!;\n    const bCodePoint = b.codePointAt(i)!;\n    if (aCodePoint !== bCodePoint) {\n      // Code points below 0x80 are represented the same way in UTF-8 as in\n      // UTF-16.\n      if (aCodePoint < 0x80 && bCodePoint < 0x80) {\n        return aCodePoint - bCodePoint;\n      }\n\n      // get the UTF-8 bytes for the code points\n      const aLength = utf8Bytes(aCodePoint, aBytes);\n      const bLength = utf8Bytes(bCodePoint, bBytes);\n      return compareArrays(aBytes, aLength, bBytes, bLength);\n    }\n\n    i += utf16LengthForCodePoint(aCodePoint);\n  }\n\n  return aLength - bLength;\n}\n\n/**\n * @param {number[]} a\n * @param {number} aLength\n * @param {number[]} b\n * @param {number} bLength\n * @returns {number}\n */\nfunction compareArrays(\n  a: number[],\n  aLength: number,\n  b: number[],\n  bLength: number,\n) {\n  const length = Math.min(aLength, bLength);\n  for (let i = 0; i < length; i++) {\n    const aValue = a[i];\n    const bValue = b[i];\n    if (aValue !== bValue) {\n      return aValue - bValue;\n    }\n  }\n  return aLength - bLength;\n}\n\n/**\n * @param {number} aCodePoint\n * @returns {number}\n */\nexport function utf16LengthForCodePoint(aCodePoint: number) {\n  return aCodePoint > 0xffff ? 2 : 1;\n}\n\n// 2 preallocated arrays for utf8Bytes.\nconst arr = () => Array.from({ length: 4 }, () => 0);\nconst aBytes = arr();\nconst bBytes = arr();\n\n/**\n * @param {number} codePoint\n * @param {number[]} bytes\n * @returns {number}\n */\nfunction utf8Bytes(codePoint: number, bytes: number[]) {\n  if (codePoint < 0x80) {\n    bytes[0] = codePoint;\n    return 1;\n  }\n\n  let count;\n  let offset;\n\n  if (codePoint <= 0x07ff) {\n    count = 1;\n    offset = 0xc0;\n  } else if (codePoint <= 0xffff) {\n    count = 2;\n    offset = 0xe0;\n  } else if (codePoint <= 0x10ffff) {\n    count = 3;\n    offset = 0xf0;\n  } else {\n    throw new Error(\"Invalid code point\");\n  }\n\n  bytes[0] = (codePoint >> (6 * count)) + offset;\n  let i = 1;\n  for (; count > 0; count--) {\n    const temp = codePoint >> (6 * (count - 1));\n    bytes[i++] = 0x80 | (temp & 0x3f);\n  }\n  return i;\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @returns {boolean}\n */\nexport function greaterThan(a: string, b: string) {\n  return compareUTF8(a, b) > 0;\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @returns {boolean}\n */\nexport function greaterThanEq(a: string, b: string) {\n  return compareUTF8(a, b) >= 0;\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @returns {boolean}\n */\nexport function lessThan(a: string, b: string) {\n  return compareUTF8(a, b) < 0;\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @returns {boolean}\n */\nexport function lessThanEq(a: string, b: string) {\n  return compareUTF8(a, b) <= 0;\n}\n","/* eslint-disable no-console */ // This is the one file where we can `console.log` for the default logger implementation.\nimport { ConvexError, Value } from \"../values/index.js\";\nimport { FunctionFailure } from \"./sync/function_result.js\";\n\n// This is blue #9 from https://www.radix-ui.com/docs/colors/palette-composition/the-scales\n// It must look good in both light and dark mode.\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\n\nexport type UdfType = \"query\" | \"mutation\" | \"action\" | \"any\";\n\nfunction prefix_for_source(source: UdfType) {\n  switch (source) {\n    case \"query\":\n      return \"Q\";\n    case \"mutation\":\n      return \"M\";\n    case \"action\":\n      return \"A\";\n    case \"any\":\n      return \"?\";\n  }\n}\n\nexport type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\";\n\n/**\n * A logger that can be used to log messages. By default, this is a wrapper\n * around `console`, but can be configured to not log at all or to log somewhere\n * else.\n */\nexport type Logger = {\n  logVerbose(...args: any[]): void;\n  log(...args: any[]): void;\n  warn(...args: any[]): void;\n  error(...args: any[]): void;\n};\n\nexport class DefaultLogger implements Logger {\n  private _onLogLineFuncs: Record<\n    string,\n    (level: LogLevel, ...args: any[]) => void\n  >;\n  private _verbose: boolean;\n\n  constructor(options: { verbose: boolean }) {\n    this._onLogLineFuncs = {};\n    this._verbose = options.verbose;\n  }\n\n  addLogLineListener(\n    func: (level: LogLevel, ...args: any[]) => void,\n  ): () => void {\n    let id = Math.random().toString(36).substring(2, 15);\n    for (let i = 0; i < 10; i++) {\n      if (this._onLogLineFuncs[id] === undefined) {\n        break;\n      }\n      id = Math.random().toString(36).substring(2, 15);\n    }\n    this._onLogLineFuncs[id] = func;\n    return () => {\n      delete this._onLogLineFuncs[id];\n    };\n  }\n\n  logVerbose(...args: any[]) {\n    if (this._verbose) {\n      for (const func of Object.values(this._onLogLineFuncs)) {\n        func(\"debug\", `${new Date().toISOString()}`, ...args);\n      }\n    }\n  }\n\n  log(...args: any[]) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"info\", ...args);\n    }\n  }\n\n  warn(...args: any[]) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"warn\", ...args);\n    }\n  }\n\n  error(...args: any[]) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"error\", ...args);\n    }\n  }\n}\n\nexport function instantiateDefaultLogger(options: {\n  verbose: boolean;\n}): Logger {\n  const logger = new DefaultLogger(options);\n  logger.addLogLineListener((level, ...args) => {\n    switch (level) {\n      case \"debug\":\n        console.debug(...args);\n        break;\n      case \"info\":\n        console.log(...args);\n        break;\n      case \"warn\":\n        console.warn(...args);\n        break;\n      case \"error\":\n        console.error(...args);\n        break;\n      default: {\n        level satisfies never;\n        console.log(...args);\n      }\n    }\n  });\n  return logger;\n}\n\nexport function instantiateNoopLogger(options: { verbose: boolean }): Logger {\n  return new DefaultLogger(options);\n}\n\nexport function logForFunction(\n  logger: Logger,\n  type: \"info\" | \"error\",\n  source: UdfType,\n  udfPath: string,\n  message: string | { errorData: Value },\n) {\n  const prefix = prefix_for_source(source);\n\n  if (typeof message === \"object\") {\n    message = `ConvexError ${JSON.stringify(message.errorData, null, 2)}`;\n  }\n  if (type === \"info\") {\n    const match = message.match(/^\\[.*?\\] /);\n    if (match === null) {\n      logger.error(\n        `[CONVEX ${prefix}(${udfPath})] Could not parse console.log`,\n      );\n      return;\n    }\n    const level = message.slice(1, match[0].length - 2);\n    const args = message.slice(match[0].length);\n\n    logger.log(`%c[CONVEX ${prefix}(${udfPath})] [${level}]`, INFO_COLOR, args);\n  } else {\n    logger.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n  }\n}\n\nexport function logFatalError(logger: Logger, message: string): Error {\n  const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n  logger.error(errorMessage);\n  return new Error(errorMessage);\n}\n\nexport function createHybridErrorStacktrace(\n  source: UdfType,\n  udfPath: string,\n  result: FunctionFailure,\n): string {\n  const prefix = prefix_for_source(source);\n  return `[CONVEX ${prefix}(${udfPath})] ${result.errorMessage}\\n  Called by client`;\n}\n\nexport function forwardData(\n  result: FunctionFailure,\n  error: ConvexError<string>,\n) {\n  (error as ConvexError<any>).data = result.errorData;\n  return error;\n}\n","/**\n * A symbol for accessing the name of a {@link FunctionReference} at runtime.\n */\nexport const functionName = Symbol.for(\"functionName\");\n","import { functionName } from \"../functionName.js\";\n\nexport const toReferencePath = Symbol.for(\"toReferencePath\");\n\n// Multiple instances of the same Symbol.for() are equal at runtime but not\n// at type-time, so `[toReferencePath]` properties aren't used in types.\n// Use this function to set the property invisibly.\nexport function setReferencePath<T>(obj: T, value: string) {\n  (obj as any)[toReferencePath] = value;\n}\n\nexport function extractReferencePath(reference: any): string | null {\n  return reference[toReferencePath] ?? null;\n}\n\nexport function isFunctionHandle(s: string): boolean {\n  return s.startsWith(\"function://\");\n}\n\nexport function getFunctionAddress(functionReference: any) {\n  // The `run*` syscalls expect either a UDF path at \"name\" or a serialized\n  // reference at \"reference\". Dispatch on `functionReference` to coerce\n  // it to one or the other.\n  let functionAddress;\n\n  // Legacy path for passing in UDF paths directly as function references.\n  if (typeof functionReference === \"string\") {\n    if (isFunctionHandle(functionReference)) {\n      functionAddress = { functionHandle: functionReference };\n    } else {\n      functionAddress = { name: functionReference };\n    }\n  }\n  // Path for passing in a `FunctionReference`, either from `api` or directly\n  // created from a UDF path with `makeFunctionReference`.\n  else if (functionReference[functionName]) {\n    functionAddress = { name: functionReference[functionName] };\n  }\n  // Reference to a component's function derived from `app` or `component`.\n  else {\n    const referencePath = extractReferencePath(functionReference);\n    if (!referencePath) {\n      throw new Error(`${functionReference} is not a functionReference`);\n    }\n    functionAddress = { reference: referencePath };\n  }\n  return functionAddress;\n}\n","import {\n  EmptyObject,\n  DefaultFunctionArgs,\n  FunctionVisibility,\n  RegisteredAction,\n  RegisteredMutation,\n  RegisteredQuery,\n} from \"./registration.js\";\nimport { Expand, UnionToIntersection } from \"../type_utils.js\";\nimport { PaginationOptions, PaginationResult } from \"./pagination.js\";\nimport { functionName } from \"./functionName.js\";\nimport { getFunctionAddress } from \"./components/paths.js\";\n\n/**\n * The type of a Convex function.\n *\n * @public\n */\nexport type FunctionType = \"query\" | \"mutation\" | \"action\";\n\n/**\n * A reference to a registered Convex function.\n *\n * You can create a {@link FunctionReference} using the generated `api` utility:\n * ```js\n * import { api } from \"../convex/_generated/api\";\n *\n * const reference = api.myModule.myFunction;\n * ```\n *\n * If you aren't using code generation, you can create references using\n * {@link anyApi}:\n * ```js\n * import { anyApi } from \"convex/server\";\n *\n * const reference = anyApi.myModule.myFunction;\n * ```\n *\n * Function references can be used to invoke functions from the client. For\n * example, in React you can pass references to the {@link react.useQuery} hook:\n * ```js\n * const result = useQuery(api.myModule.myFunction);\n * ```\n *\n * @typeParam Type - The type of the function (\"query\", \"mutation\", or \"action\").\n * @typeParam Visibility - The visibility of the function (\"public\" or \"internal\").\n * @typeParam Args - The arguments to this function. This is an object mapping\n * argument names to their types.\n * @typeParam ReturnType - The return type of this function.\n * @public\n */\nexport type FunctionReference<\n  Type extends FunctionType,\n  Visibility extends FunctionVisibility = \"public\",\n  Args extends DefaultFunctionArgs = any,\n  ReturnType = any,\n  ComponentPath = string | undefined,\n> = {\n  _type: Type;\n  _visibility: Visibility;\n  _args: Args;\n  _returnType: ReturnType;\n  _componentPath: ComponentPath;\n};\n\n/**\n * Get the name of a function from a {@link FunctionReference}.\n *\n * The name is a string like \"myDir/myModule:myFunction\". If the exported name\n * of the function is `\"default\"`, the function name is omitted\n * (e.g. \"myDir/myModule\").\n *\n * @param functionReference - A {@link FunctionReference} to get the name of.\n * @returns A string of the function's name.\n *\n * @public\n */\nexport function getFunctionName(\n  functionReference: AnyFunctionReference,\n): string {\n  const address = getFunctionAddress(functionReference);\n\n  if (address.name === undefined) {\n    if (address.functionHandle !== undefined) {\n      throw new Error(\n        `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received function handle ${address.functionHandle}`,\n      );\n    } else if (address.reference !== undefined) {\n      throw new Error(\n        `Expected function reference in the current component like \"api.file.func\" or \"internal.file.func\", but received reference ${address.reference}`,\n      );\n    }\n    throw new Error(\n      `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received ${JSON.stringify(address)}`,\n    );\n  }\n  // Both a legacy thing and also a convenience for interactive use:\n  // the types won't check but a string is always allowed at runtime.\n  if (typeof functionReference === \"string\") return functionReference;\n\n  // Two different runtime values for FunctionReference implement this\n  // interface: api objects returned from `createApi()` and standalone\n  // function reference objects returned from makeFunctionReference.\n  const name = (functionReference as any)[functionName];\n  if (!name) {\n    throw new Error(`${functionReference as any} is not a functionReference`);\n  }\n  return name;\n}\n\n/**\n * FunctionReferences generally come from generated code, but in custom clients\n * it may be useful to be able to build one manually.\n *\n * Real function references are empty objects at runtime, but the same interface\n * can be implemented with an object for tests and clients which don't use\n * code generation.\n *\n * @param name - The identifier of the function. E.g. `path/to/file:functionName`\n * @public\n */\nexport function makeFunctionReference<\n  type extends FunctionType,\n  args extends DefaultFunctionArgs = any,\n  ret = any,\n>(name: string): FunctionReference<type, \"public\", args, ret> {\n  return { [functionName]: name } as unknown as FunctionReference<\n    type,\n    \"public\",\n    args,\n    ret\n  >;\n}\n\n/**\n * Create a runtime API object that implements {@link AnyApi}.\n *\n * This allows accessing any path regardless of what directories, modules,\n * or functions are defined.\n *\n * @param pathParts - The path to the current node in the API.\n * @returns An {@link AnyApi}\n * @public\n */\nfunction createApi(pathParts: string[] = []): AnyApi {\n  const handler: ProxyHandler<object> = {\n    get(_, prop: string | symbol) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createApi(newParts);\n      } else if (prop === functionName) {\n        if (pathParts.length < 2) {\n          const found = [\"api\", ...pathParts].join(\".\");\n          throw new Error(\n            `API path is expected to be of the form \\`api.moduleName.functionName\\`. Found: \\`${found}\\``,\n          );\n        }\n        const path = pathParts.slice(0, -1).join(\"/\");\n        const exportName = pathParts[pathParts.length - 1];\n        if (exportName === \"default\") {\n          return path;\n        } else {\n          return path + \":\" + exportName;\n        }\n      } else if (prop === Symbol.toStringTag) {\n        return \"FunctionReference\";\n      } else {\n        return undefined;\n      }\n    },\n  };\n\n  return new Proxy({}, handler);\n}\n\n/**\n * Given an export from a module, convert it to a {@link FunctionReference}\n * if it is a Convex function.\n */\nexport type FunctionReferenceFromExport<Export> =\n  Export extends RegisteredQuery<\n    infer Visibility,\n    infer Args,\n    infer ReturnValue\n  >\n    ? FunctionReference<\n        \"query\",\n        Visibility,\n        Args,\n        ConvertReturnType<ReturnValue>\n      >\n    : Export extends RegisteredMutation<\n          infer Visibility,\n          infer Args,\n          infer ReturnValue\n        >\n      ? FunctionReference<\n          \"mutation\",\n          Visibility,\n          Args,\n          ConvertReturnType<ReturnValue>\n        >\n      : Export extends RegisteredAction<\n            infer Visibility,\n            infer Args,\n            infer ReturnValue\n          >\n        ? FunctionReference<\n            \"action\",\n            Visibility,\n            Args,\n            ConvertReturnType<ReturnValue>\n          >\n        : never;\n\n/**\n * Given a module, convert all the Convex functions into\n * {@link FunctionReference}s and remove the other exports.\n *\n * BE CAREFUL WHEN EDITING THIS!\n *\n * This is written carefully to preserve jumping to function definitions using\n * cmd+click. If you edit it, please test that cmd+click still works.\n */\ntype FunctionReferencesInModule<Module extends Record<string, any>> = {\n  -readonly [ExportName in keyof Module as Module[ExportName][\"isConvexFunction\"] extends true\n    ? ExportName\n    : never]: FunctionReferenceFromExport<Module[ExportName]>;\n};\n\n/**\n * Given a path to a module and it's type, generate an API type for this module.\n *\n * This is a nested object according to the module's path.\n */\ntype ApiForModule<\n  ModulePath extends string,\n  Module extends object,\n> = ModulePath extends `${infer First}/${infer Second}`\n  ? {\n      [_ in First]: ApiForModule<Second, Module>;\n    }\n  : { [_ in ModulePath]: FunctionReferencesInModule<Module> };\n\n/**\n * Given the types of all modules in the `convex/` directory, construct the type\n * of `api`.\n *\n * `api` is a utility for constructing {@link FunctionReference}s.\n *\n * @typeParam AllModules - A type mapping module paths (like `\"dir/myModule\"`) to\n * the types of the modules.\n * @public\n */\nexport type ApiFromModules<AllModules extends Record<string, object>> =\n  FilterApi<\n    ApiFromModulesAllowEmptyNodes<AllModules>,\n    FunctionReference<any, any, any, any>\n  >;\n\ntype ApiFromModulesAllowEmptyNodes<AllModules extends Record<string, object>> =\n  ExpandModulesAndDirs<\n    UnionToIntersection<\n      {\n        [ModulePath in keyof AllModules]: ApiForModule<\n          ModulePath & string,\n          AllModules[ModulePath]\n        >;\n      }[keyof AllModules]\n    >\n  >;\n\n/**\n * @public\n *\n * Filter a Convex deployment api object for functions which meet criteria,\n * for example all public queries.\n */\nexport type FilterApi<API, Predicate> = Expand<{\n  [mod in keyof API as API[mod] extends Predicate\n    ? mod\n    : API[mod] extends FunctionReference<any, any, any, any>\n      ? never\n      : FilterApi<API[mod], Predicate> extends Record<string, never>\n        ? never\n        : mod]: API[mod] extends Predicate\n    ? API[mod]\n    : FilterApi<API[mod], Predicate>;\n}>;\n\n/**\n * Given an api of type API and a FunctionReference subtype, return an api object\n * containing only the function references that match.\n *\n * ```ts\n * const q = filterApi<typeof api, FunctionReference<\"query\">>(api)\n * ```\n *\n * @public\n */\nexport function filterApi<API, Predicate>(api: API): FilterApi<API, Predicate> {\n  return api as any;\n}\n\n// These just* API filter helpers require no type parameters so are useable from JavaScript.\n/** @public */\nexport function justInternal<API>(\n  api: API,\n): FilterApi<API, FunctionReference<any, \"internal\", any, any>> {\n  return api as any;\n}\n\n/** @public */\nexport function justPublic<API>(\n  api: API,\n): FilterApi<API, FunctionReference<any, \"public\", any, any>> {\n  return api as any;\n}\n\n/** @public */\nexport function justQueries<API>(\n  api: API,\n): FilterApi<API, FunctionReference<\"query\", any, any, any>> {\n  return api as any;\n}\n\n/** @public */\nexport function justMutations<API>(\n  api: API,\n): FilterApi<API, FunctionReference<\"mutation\", any, any, any>> {\n  return api as any;\n}\n\n/** @public */\nexport function justActions<API>(\n  api: API,\n): FilterApi<API, FunctionReference<\"action\", any, any, any>> {\n  return api as any;\n}\n\n/** @public */\nexport function justPaginatedQueries<API>(\n  api: API,\n): FilterApi<\n  API,\n  FunctionReference<\n    \"query\",\n    any,\n    { paginationOpts: PaginationOptions },\n    PaginationResult<any>\n  >\n> {\n  return api as any;\n}\n\n/** @public */\nexport function justSchedulable<API>(\n  api: API,\n): FilterApi<API, FunctionReference<\"mutation\" | \"action\", any, any, any>> {\n  return api as any;\n}\n\n/**\n * Like {@link Expand}, this simplifies how TypeScript displays object types.\n * The differences are:\n * 1. This version is recursive.\n * 2. This stops recursing when it hits a {@link FunctionReference}.\n */\ntype ExpandModulesAndDirs<ObjectType> = ObjectType extends AnyFunctionReference\n  ? ObjectType\n  : {\n      [Key in keyof ObjectType]: ExpandModulesAndDirs<ObjectType[Key]>;\n    };\n\n/**\n * A {@link FunctionReference} of any type and any visibility with any\n * arguments and any return type.\n *\n * @public\n */\nexport type AnyFunctionReference = FunctionReference<any, any>;\n\ntype AnyModuleDirOrFunc = {\n  [key: string]: AnyModuleDirOrFunc;\n} & AnyFunctionReference;\n\n/**\n * The type that Convex api objects extend. If you were writing an api from\n * scratch it should extend this type.\n *\n * @public\n */\nexport type AnyApi = Record<string, Record<string, AnyModuleDirOrFunc>>;\n\n/**\n * Recursive partial API, useful for defining a subset of an API when mocking\n * or building custom api objects.\n *\n * @public\n */\nexport type PartialApi<API> = {\n  [mod in keyof API]?: API[mod] extends FunctionReference<any, any, any, any>\n    ? API[mod]\n    : PartialApi<API[mod]>;\n};\n\n/**\n * A utility for constructing {@link FunctionReference}s in projects that\n * are not using code generation.\n *\n * You can create a reference to a function like:\n * ```js\n * const reference = anyApi.myModule.myFunction;\n * ```\n *\n * This supports accessing any path regardless of what directories and modules\n * are in your project. All function references are typed as\n * {@link AnyFunctionReference}.\n *\n *\n * If you're using code generation, use `api` from `convex/_generated/api`\n * instead. It will be more type-safe and produce better auto-complete\n * in your editor.\n *\n * @public\n */\nexport const anyApi: AnyApi = createApi() as any;\n\n/**\n * Given a {@link FunctionReference}, get the return type of the function.\n *\n * This is represented as an object mapping argument names to values.\n * @public\n */\nexport type FunctionArgs<FuncRef extends AnyFunctionReference> =\n  FuncRef[\"_args\"];\n\n/**\n * A tuple type of the (maybe optional) arguments to `FuncRef`.\n *\n * This type is used to make methods involving arguments type safe while allowing\n * skipping the arguments for functions that don't require arguments.\n *\n * @public\n */\nexport type OptionalRestArgs<FuncRef extends AnyFunctionReference> =\n  FuncRef[\"_args\"] extends EmptyObject\n    ? [args?: EmptyObject]\n    : [args: FuncRef[\"_args\"]];\n\n/**\n * A tuple type of the (maybe optional) arguments to `FuncRef`, followed by an options\n * object of type `Options`.\n *\n * This type is used to make methods like `useQuery` type-safe while allowing\n * 1. Skipping arguments for functions that don't require arguments.\n * 2. Skipping the options object.\n * @public\n */\nexport type ArgsAndOptions<\n  FuncRef extends AnyFunctionReference,\n  Options,\n> = FuncRef[\"_args\"] extends EmptyObject\n  ? [args?: EmptyObject, options?: Options]\n  : [args: FuncRef[\"_args\"], options?: Options];\n\n/**\n * Given a {@link FunctionReference}, get the return type of the function.\n *\n * @public\n */\nexport type FunctionReturnType<FuncRef extends AnyFunctionReference> =\n  FuncRef[\"_returnType\"];\n\ntype UndefinedToNull<T> = T extends void ? null : T;\n\ntype NullToUndefinedOrNull<T> = T extends null ? T | undefined | void : T;\n\n/**\n * Convert the return type of a function to it's client-facing format.\n *\n * This means:\n * - Converting `undefined` and `void` to `null`\n * - Removing all `Promise` wrappers\n */\nexport type ConvertReturnType<T> = UndefinedToNull<Awaited<T>>;\n\nexport type ValidatorTypeToReturnType<T> =\n  | Promise<NullToUndefinedOrNull<T>>\n  | NullToUndefinedOrNull<T>;\n","// Implements an unsigned long.\n// This is a subset of https://github.com/dcodeIO/Long.js,\n// vendored to decrease bundle size.\n// Copyright Daniel Wirtz <dcode@dcode.io>\n// License: Apache Version 2.0\n/*\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2023 Daniel Wirtz <dcode@dcode.io>\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// This works... but don't try to compare one to a real Long.js Long!\n// For internal use only.\n// `| 0` assures the runtime that we are using integer arithmetic\nexport class Long {\n  low: number;\n  high: number;\n  __isUnsignedLong__: boolean;\n\n  static isLong(obj: Long) {\n    return (obj && obj.__isUnsignedLong__) === true;\n  }\n\n  constructor(low: number, high: number) {\n    this.low = low | 0;\n    this.high = high | 0;\n    this.__isUnsignedLong__ = true;\n  }\n\n  // prettier-ignore\n  static fromBytesLE(bytes: number[]): Long {\n    return new Long(\n      bytes[0] |\n      bytes[1] << 8 |\n      bytes[2] << 16 |\n      bytes[3] << 24,\n      bytes[4] |\n      bytes[5] << 8 |\n      bytes[6] << 16 |\n      bytes[7] << 24,\n    );\n  }\n\n  // prettier-ignore\n  toBytesLE() {\n    const hi = this.high;\n    const lo = this.low;\n    return [\n      lo & 0xff,\n      lo >>> 8 & 0xff,\n      lo >>> 16 & 0xff,\n      lo >>> 24,\n      hi & 0xff,\n      hi >>> 8 & 0xff,\n      hi >>> 16 & 0xff,\n      hi >>> 24\n    ];\n  }\n\n  static fromNumber(value: number) {\n    if (isNaN(value)) return UZERO;\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    return new Long(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0);\n  }\n\n  toString() {\n    return (\n      BigInt(this.high) * BigInt(TWO_PWR_32_DBL) +\n      BigInt(this.low)\n    ).toString();\n  }\n\n  equals(other: Long) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  }\n\n  notEquals(other: Long) {\n    return !this.equals(other);\n  }\n\n  comp(other: Long) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.equals(other)) return 0;\n    return other.high >>> 0 > this.high >>> 0 ||\n      (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n      ? -1\n      : 1;\n  }\n\n  lessThanOrEqual(other: Long) {\n    return this.comp(/* validates */ other) <= 0;\n  }\n\n  static fromValue(val: any) {\n    if (typeof val === \"number\") return Long.fromNumber(val);\n    // Throws for non-objects, converts non-instanceof Long:\n    return new Long(val.low, val.high);\n  }\n}\n\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(0xffffffff | 0, 0xffffffff | 0);\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import { Logger } from \"../logging.js\";\nimport { LocalSyncState } from \"./local_state.js\";\nimport { AuthError, IdentityVersion, Transition } from \"./protocol.js\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// setTimout uses 32 bit integer, so it can only\n// schedule about 24 days in the future.\nconst MAXIMUM_REFRESH_DELAY = 20 * 24 * 60 * 60 * 1000; // 20 days\n\nconst MAX_TOKEN_CONFIRMATION_ATTEMPTS = 2;\n\n/**\n * An async function returning a JWT. Depending on the auth providers\n * configured in convex/auth.config.ts, this may be a JWT-encoded OpenID\n * Connect Identity Token or a traditional JWT.\n *\n * `forceRefreshToken` is `true` if the server rejected a previously\n * returned token or the token is anticipated to expiring soon\n * based on its `exp` time.\n *\n * See {@link ConvexReactClient.setAuth}.\n *\n * @public\n */\nexport type AuthTokenFetcher = (args: {\n  forceRefreshToken: boolean;\n}) => Promise<string | null | undefined>;\n\n/**\n * What is provided to the client.\n */\ntype AuthConfig = {\n  fetchToken: AuthTokenFetcher;\n  onAuthChange: (isAuthenticated: boolean) => void;\n};\n\n/**\n * In general we take 3 steps:\n *   1. Fetch a possibly cached token\n *   2. Immediately fetch a fresh token without using a cache\n *   3. Repeat step 2 before the end of the fresh token's lifetime\n *\n * When we fetch without using a cache we know when the token\n * will expire, and can schedule refetching it.\n *\n * If we get an error before a scheduled refetch, we go back\n * to step 2.\n */\ntype AuthState =\n  | { state: \"noAuth\" }\n  | {\n      state: \"waitingForServerConfirmationOfCachedToken\";\n      config: AuthConfig;\n      hasRetried: boolean;\n    }\n  | {\n      state: \"initialRefetch\";\n      config: AuthConfig;\n    }\n  | {\n      state: \"waitingForServerConfirmationOfFreshToken\";\n      config: AuthConfig;\n      hadAuth: boolean;\n      token: string;\n    }\n  | {\n      state: \"waitingForScheduledRefetch\";\n      config: AuthConfig;\n      refetchTokenTimeoutId: ReturnType<typeof setTimeout>;\n    }\n  // Special/weird state when we got a valid token\n  // but could not fetch a new one.\n  | {\n      state: \"notRefetching\";\n      config: AuthConfig;\n    };\n\n/**\n * Handles the state transitions for auth. The server is the source\n * of truth.\n */\nexport class AuthenticationManager {\n  private authState: AuthState = { state: \"noAuth\" };\n  // Used to detect races involving `setConfig` calls\n  // while a token is being fetched.\n  private configVersion = 0;\n  // Shared by the BaseClient so that the auth manager can easily inspect it\n  private readonly syncState: LocalSyncState;\n  // Passed down by BaseClient, sends a message to the server\n  private readonly authenticate: (token: string) => IdentityVersion;\n  private readonly stopSocket: () => Promise<void>;\n  private readonly tryRestartSocket: () => void;\n  private readonly pauseSocket: () => void;\n  private readonly resumeSocket: () => void;\n  // Passed down by BaseClient, sends a message to the server\n  private readonly clearAuth: () => void;\n  private readonly logger: Logger;\n  private readonly refreshTokenLeewaySeconds: number;\n  // Number of times we have attempted to confirm the latest token. We retry up\n  // to `MAX_TOKEN_CONFIRMATION_ATTEMPTS` times.\n  private tokenConfirmationAttempts = 0;\n  constructor(\n    syncState: LocalSyncState,\n    callbacks: {\n      authenticate: (token: string) => IdentityVersion;\n      stopSocket: () => Promise<void>;\n      tryRestartSocket: () => void;\n      pauseSocket: () => void;\n      resumeSocket: () => void;\n      clearAuth: () => void;\n    },\n    config: {\n      refreshTokenLeewaySeconds: number;\n      logger: Logger;\n    },\n  ) {\n    this.syncState = syncState;\n    this.authenticate = callbacks.authenticate;\n    this.stopSocket = callbacks.stopSocket;\n    this.tryRestartSocket = callbacks.tryRestartSocket;\n    this.pauseSocket = callbacks.pauseSocket;\n    this.resumeSocket = callbacks.resumeSocket;\n    this.clearAuth = callbacks.clearAuth;\n    this.logger = config.logger;\n    this.refreshTokenLeewaySeconds = config.refreshTokenLeewaySeconds;\n  }\n\n  async setConfig(\n    fetchToken: AuthTokenFetcher,\n    onChange: (isAuthenticated: boolean) => void,\n  ) {\n    this.resetAuthState();\n    this._logVerbose(\"pausing WS for auth token fetch\");\n    this.pauseSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(fetchToken, {\n      forceRefreshToken: false,\n    });\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfCachedToken\",\n        config: { fetchToken, onAuthChange: onChange },\n        hasRetried: false,\n      });\n      this.authenticate(token.value);\n    } else {\n      this.setAuthState({\n        state: \"initialRefetch\",\n        config: { fetchToken, onAuthChange: onChange },\n      });\n      // Try again with `forceRefreshToken: true`\n      await this.refetchToken();\n    }\n    this._logVerbose(\"resuming WS after auth token fetch\");\n    this.resumeSocket();\n  }\n\n  onTransition(serverMessage: Transition) {\n    if (\n      !this.syncState.isCurrentOrNewerAuthVersion(\n        serverMessage.endVersion.identity,\n      )\n    ) {\n      // This is a stale transition - client has moved on to\n      // a newer auth version.\n      return;\n    }\n    if (\n      serverMessage.endVersion.identity <= serverMessage.startVersion.identity\n    ) {\n      // This transition did not change auth - it is not a response to Authenticate.\n      return;\n    }\n\n    if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n      this._logVerbose(\"server confirmed auth token is valid\");\n      void this.refetchToken();\n      this.authState.config.onAuthChange(true);\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this._logVerbose(\"server confirmed new auth token is valid\");\n      this.scheduleTokenRefetch(this.authState.token);\n      this.tokenConfirmationAttempts = 0;\n      if (!this.authState.hadAuth) {\n        this.authState.config.onAuthChange(true);\n      }\n    }\n  }\n\n  onAuthError(serverMessage: AuthError) {\n    // If the AuthError is not due to updating the token, and we're currently\n    // waiting on the result of a token update, ignore.\n    if (\n      serverMessage.authUpdateAttempted === false &&\n      (this.authState.state === \"waitingForServerConfirmationOfFreshToken\" ||\n        this.authState.state === \"waitingForServerConfirmationOfCachedToken\")\n    ) {\n      this._logVerbose(\"ignoring non-auth token expired error\");\n      return;\n    }\n    const { baseVersion } = serverMessage;\n    // Versioned AuthErrors are ignored if the client advanced to\n    // a newer auth identity\n    // Error are reporting the previous version, since the server\n    // didn't advance, hence `+ 1`.\n    if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n      this._logVerbose(\"ignoring auth error for previous auth attempt\");\n      return;\n    }\n    void this.tryToReauthenticate(serverMessage);\n    return;\n  }\n\n  // This is similar to `refetchToken` defined below, in fact we\n  // don't represent them as different states, but it is different\n  // in that we pause the WebSocket so that mutations\n  // don't retry with bad auth.\n  private async tryToReauthenticate(serverMessage: AuthError) {\n    this._logVerbose(`attempting to reauthenticate: ${serverMessage.error}`);\n    if (\n      // No way to fetch another token, kaboom\n      this.authState.state === \"noAuth\" ||\n      // We failed on a fresh token. After a small number of retries, we give up\n      // and clear the auth state to avoid infinite retries.\n      (this.authState.state === \"waitingForServerConfirmationOfFreshToken\" &&\n        this.tokenConfirmationAttempts >= MAX_TOKEN_CONFIRMATION_ATTEMPTS)\n    ) {\n      this.logger.error(\n        `Failed to authenticate: \"${serverMessage.error}\", check your server auth config`,\n      );\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      if (this.authState.state !== \"noAuth\") {\n        this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n      }\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this.tokenConfirmationAttempts++;\n      this._logVerbose(\n        `retrying reauthentication, ${MAX_TOKEN_CONFIRMATION_ATTEMPTS - this.tokenConfirmationAttempts} attempts remaining`,\n      );\n    }\n\n    await this.stopSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true,\n      },\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n\n    if (token.value && this.syncState.isNewAuth(token.value)) {\n      this.authenticate(token.value);\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfFreshToken\",\n        config: this.authState.config,\n        token: token.value,\n        hadAuth:\n          this.authState.state === \"notRefetching\" ||\n          this.authState.state === \"waitingForScheduledRefetch\",\n      });\n    } else {\n      this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this.tryRestartSocket();\n  }\n\n  // Force refetch the token and schedule another refetch\n  // before the token expires - an active client should never\n  // need to reauthenticate.\n  private async refetchToken() {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    this._logVerbose(\"refetching auth token\");\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true,\n      },\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n\n    if (token.value) {\n      if (this.syncState.isNewAuth(token.value)) {\n        this.setAuthState({\n          state: \"waitingForServerConfirmationOfFreshToken\",\n          hadAuth: this.syncState.hasAuth(),\n          token: token.value,\n          config: this.authState.config,\n        });\n        this.authenticate(token.value);\n      } else {\n        this.setAuthState({\n          state: \"notRefetching\",\n          config: this.authState.config,\n        });\n      }\n    } else {\n      this._logVerbose(\"refetching token failed\");\n      if (this.syncState.hasAuth()) {\n        this.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    // Restart in case this refetch was triggered via schedule during\n    // a reauthentication attempt.\n    this._logVerbose(\n      \"restarting WS after auth token fetch (if currently stopped)\",\n    );\n    this.tryRestartSocket();\n  }\n\n  private scheduleTokenRefetch(token: string) {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    const decodedToken = this.decodeToken(token);\n    if (!decodedToken) {\n      // This is no longer really possible, because\n      // we wait on server response before scheduling token refetch,\n      // and the server currently requires JWT tokens.\n      this.logger.error(\n        \"Auth token is not a valid JWT, cannot refetch the token\",\n      );\n      return;\n    }\n    // iat: issued at time, UTC seconds timestamp at which the JWT was issued\n    // exp: expiration time, UTC seconds timestamp at which the JWT will expire\n    const { iat, exp } = decodedToken as { iat?: number; exp?: number };\n    if (!iat || !exp) {\n      this.logger.error(\n        \"Auth token does not have required fields, cannot refetch the token\",\n      );\n      return;\n    }\n    // Because the client and server clocks may be out of sync,\n    // we only know that the token will expire after `exp - iat`,\n    // and since we just fetched a fresh one we know when that\n    // will happen.\n    const tokenValiditySeconds = exp - iat;\n    if (tokenValiditySeconds <= 2) {\n      this.logger.error(\n        \"Auth token does not live long enough, cannot refetch the token\",\n      );\n      return;\n    }\n    // Attempt to refresh the token `refreshTokenLeewaySeconds` before it expires,\n    // or immediately if the token is already expiring soon.\n    let delay = Math.min(\n      MAXIMUM_REFRESH_DELAY,\n      (tokenValiditySeconds - this.refreshTokenLeewaySeconds) * 1000,\n    );\n    if (delay <= 0) {\n      // Refetch immediately, but this might be due to configuring a `refreshTokenLeewaySeconds`\n      // that is too large compared to the token's actual lifetime.\n      this.logger.warn(\n        `Refetching auth token immediately, configured leeway ${this.refreshTokenLeewaySeconds}s is larger than the token's lifetime ${tokenValiditySeconds}s`,\n      );\n      delay = 0;\n    }\n    const refetchTokenTimeoutId = setTimeout(() => {\n      this._logVerbose(\"running scheduled token refetch\");\n      void this.refetchToken();\n    }, delay);\n    this.setAuthState({\n      state: \"waitingForScheduledRefetch\",\n      refetchTokenTimeoutId,\n      config: this.authState.config,\n    });\n    this._logVerbose(\n      `scheduled preemptive auth token refetching in ${delay}ms`,\n    );\n  }\n\n  // Protects against simultaneous calls to `setConfig`\n  // while we're fetching a token\n  private async fetchTokenAndGuardAgainstRace(\n    fetchToken: AuthTokenFetcher,\n    fetchArgs: {\n      forceRefreshToken: boolean;\n    },\n  ) {\n    const originalConfigVersion = ++this.configVersion;\n    this._logVerbose(\n      `fetching token with config version ${originalConfigVersion}`,\n    );\n    const token = await fetchToken(fetchArgs);\n    if (this.configVersion !== originalConfigVersion) {\n      // This is a stale config\n      this._logVerbose(\n        `stale config version, expected ${originalConfigVersion}, got ${this.configVersion}`,\n      );\n      return { isFromOutdatedConfig: true };\n    }\n    return { isFromOutdatedConfig: false, value: token };\n  }\n\n  stop() {\n    this.resetAuthState();\n    // Bump this in case we are mid-token-fetch when we get stopped\n    this.configVersion++;\n    this._logVerbose(`config version bumped to ${this.configVersion}`);\n  }\n\n  private setAndReportAuthFailed(\n    onAuthChange: (authenticated: boolean) => void,\n  ) {\n    onAuthChange(false);\n    this.resetAuthState();\n  }\n\n  private resetAuthState() {\n    this.setAuthState({ state: \"noAuth\" });\n  }\n\n  private setAuthState(newAuth: AuthState) {\n    const authStateForLog =\n      newAuth.state === \"waitingForServerConfirmationOfFreshToken\"\n        ? {\n            hadAuth: newAuth.hadAuth,\n            state: newAuth.state,\n            token: `...${newAuth.token.slice(-7)}`,\n          }\n        : { state: newAuth.state };\n    this._logVerbose(\n      `setting auth state to ${JSON.stringify(authStateForLog)}`,\n    );\n    switch (newAuth.state) {\n      case \"waitingForScheduledRefetch\":\n      case \"notRefetching\":\n      case \"noAuth\":\n        this.tokenConfirmationAttempts = 0;\n        break;\n      case \"waitingForServerConfirmationOfFreshToken\":\n      case \"waitingForServerConfirmationOfCachedToken\":\n      case \"initialRefetch\":\n        break;\n      default: {\n        newAuth satisfies never;\n      }\n    }\n    if (this.authState.state === \"waitingForScheduledRefetch\") {\n      clearTimeout(this.authState.refetchTokenTimeoutId);\n\n      // The waitingForScheduledRefetch state is the most quiesced authed state.\n      // Let the syncState know that auth is in a good state, so it can reset failure backoffs\n      this.syncState.markAuthCompletion();\n    }\n    this.authState = newAuth;\n  }\n\n  private decodeToken(token: string) {\n    try {\n      return jwtDecode(token);\n    } catch (e) {\n      this._logVerbose(\n        `Error decoding token: ${e instanceof Error ? e.message : \"Unknown error\"}`,\n      );\n      return null;\n    }\n  }\n\n  private _logVerbose(message: string) {\n    this.logger.logVerbose(`${message} [v${this.configVersion}]`);\n  }\n}\n","import {\n  FunctionReference,\n  FunctionReturnType,\n  OptionalRestArgs,\n  getFunctionName,\n} from \"../server/api.js\";\nimport { parseArgs, validateDeploymentUrl } from \"../common/index.js\";\nimport { version } from \"../index.js\";\nimport {\n  ConvexError,\n  JSONValue,\n  convexToJson,\n  jsonToConvex,\n} from \"../values/index.js\";\nimport {\n  instantiateDefaultLogger,\n  instantiateNoopLogger,\n  logForFunction,\n  Logger,\n} from \"./logging.js\";\nimport {\n  ArgsAndOptions,\n  FunctionArgs,\n  UserIdentityAttributes,\n} from \"../server/index.js\";\n\nexport const STATUS_CODE_OK = 200;\nexport const STATUS_CODE_BAD_REQUEST = 400;\n// Special custom 5xx HTTP status code to mean that the UDF returned an error.\n//\n// Must match the constant of the same name in the backend.\nexport const STATUS_CODE_UDF_FAILED = 560;\n\n// Allow fetch to be shimmed in for Node.js < 18\nlet specifiedFetch: typeof globalThis.fetch | undefined = undefined;\nexport function setFetch(f: typeof globalThis.fetch) {\n  specifiedFetch = f;\n}\n\nexport type HttpMutationOptions = {\n  /**\n   * Skip the default queue of mutations and run this immediately.\n   *\n   * This allows the same HttpConvexClient to be used to request multiple\n   * mutations in parallel, something not possible with WebSocket-based clients.\n   */\n  skipQueue: boolean;\n};\n\n/**\n * A Convex client that runs queries and mutations over HTTP.\n *\n * This client is stateful (it has user credentials and queues mutations)\n * so take care to avoid sharing it between requests in a server.\n *\n * This is appropriate for server-side code (like Netlify Lambdas) or non-reactive\n * webapps.\n *\n * @public\n */\nexport class ConvexHttpClient {\n  private readonly address: string;\n  private auth: string | undefined;\n  private adminAuth: string | undefined;\n  private encodedTsPromise?: Promise<string>;\n  private debug: boolean;\n  private fetchOptions?: FetchOptions;\n  private logger: Logger;\n  private mutationQueue: Array<{\n    mutation: FunctionReference<\"mutation\">;\n    args: FunctionArgs<any>;\n    resolve: (value: any) => void;\n    reject: (error: any) => void;\n  }> = [];\n  private isProcessingQueue: boolean = false;\n\n  /**\n   * Create a new {@link ConvexHttpClient}.\n   *\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - An object of options.\n   * - `skipConvexDeploymentUrlCheck` - Skip validating that the Convex deployment URL looks like\n   * `https://happy-animal-123.convex.cloud` or localhost. This can be useful if running a self-hosted\n   * Convex backend that uses a different URL.\n   * - `logger` - A logger or a boolean. If not provided, logs to the console.\n   * You can construct your own logger to customize logging to log elsewhere\n   * or not log at all, or use `false` as a shorthand for a no-op logger.\n   * A logger is an object with 4 methods: log(), warn(), error(), and logVerbose().\n   * These methods can receive multiple arguments of any types, like console.log().\n   * - `auth` - A JWT containing identity claims accessible in Convex functions.\n   * This identity may expire so it may be necessary to call `setAuth()` later,\n   * but for short-lived clients it's convenient to specify this value here.\n   */\n  constructor(\n    address: string,\n    options?: {\n      skipConvexDeploymentUrlCheck?: boolean;\n      logger?: Logger | boolean;\n      auth?: string;\n    },\n  ) {\n    if (typeof options === \"boolean\") {\n      throw new Error(\n        \"skipConvexDeploymentUrlCheck as the second argument is no longer supported. Please pass an options object, `{ skipConvexDeploymentUrlCheck: true }`.\",\n      );\n    }\n    const opts = options ?? {};\n    if (opts.skipConvexDeploymentUrlCheck !== true) {\n      validateDeploymentUrl(address);\n    }\n    this.logger =\n      options?.logger === false\n        ? instantiateNoopLogger({ verbose: false })\n        : options?.logger !== true && options?.logger\n          ? options.logger\n          : instantiateDefaultLogger({ verbose: false });\n    this.address = address;\n    this.debug = true;\n    this.auth = undefined;\n    this.adminAuth = undefined;\n    if (options?.auth) {\n      this.setAuth(options.auth);\n    }\n  }\n\n  /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   * @deprecated Use url, which returns the url without /api at the end.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */\n  backendUrl(): string {\n    return `${this.address}/api`;\n  }\n\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */\n  setAuth(value: string) {\n    this.clearAuth();\n    this.auth = value;\n  }\n\n  /**\n   * Set admin auth token to allow calling internal queries, mutations, and actions\n   * and acting as an identity.\n   *\n   * @internal\n   */\n  setAdminAuth(token: string, actingAsIdentity?: UserIdentityAttributes) {\n    this.clearAuth();\n    if (actingAsIdentity !== undefined) {\n      // Encode the identity to a base64 string\n      const bytes = new TextEncoder().encode(JSON.stringify(actingAsIdentity));\n      const actingAsIdentityEncoded = btoa(String.fromCodePoint(...bytes));\n      this.adminAuth = `${token}:${actingAsIdentityEncoded}`;\n    } else {\n      this.adminAuth = token;\n    }\n  }\n\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.auth = undefined;\n    this.adminAuth = undefined;\n  }\n\n  /**\n   * Sets whether the result log lines should be printed on the console or not.\n   *\n   * @internal\n   */\n  setDebug(debug: boolean) {\n    this.debug = debug;\n  }\n\n  /**\n   * Used to customize the fetch behavior in some runtimes.\n   *\n   * @internal\n   */\n  setFetchOptions(fetchOptions: FetchOptions) {\n    this.fetchOptions = fetchOptions;\n  }\n\n  /**\n   * This API is experimental: it may change or disappear.\n   *\n   * Execute a Convex query function at the same timestamp as every other\n   * consistent query execution run by this HTTP client.\n   *\n   * This doesn't make sense for long-lived ConvexHttpClients as Convex\n   * backends can read a limited amount into the past: beyond 30 seconds\n   * in the past may not be available.\n   *\n   * Create a new client to use a consistent time.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   *\n   * @deprecated This API is experimental: it may change or disappear.\n   */\n  async consistentQuery<Query extends FunctionReference<\"query\">>(\n    query: Query,\n    ...args: OptionalRestArgs<Query>\n  ): Promise<FunctionReturnType<Query>> {\n    const queryArgs = parseArgs(args[0]);\n\n    const timestampPromise = this.getTimestamp();\n    return await this.queryInner(query, queryArgs, { timestampPromise });\n  }\n\n  private async getTimestamp() {\n    if (this.encodedTsPromise) {\n      return this.encodedTsPromise;\n    }\n    return (this.encodedTsPromise = this.getTimestampInner());\n  }\n\n  private async getTimestampInner() {\n    const localFetch = specifiedFetch || fetch;\n\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${version}`,\n    };\n    const response = await localFetch(`${this.address}/api/query_ts`, {\n      ...this.fetchOptions,\n      method: \"POST\",\n      headers: headers,\n    });\n    if (!response.ok) {\n      throw new Error(await response.text());\n    }\n    const { ts } = (await response.json()) as { ts: string };\n    return ts;\n  }\n\n  /**\n   * Execute a Convex query function.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */\n  async query<Query extends FunctionReference<\"query\">>(\n    query: Query,\n    ...args: OptionalRestArgs<Query>\n  ): Promise<FunctionReturnType<Query>> {\n    const queryArgs = parseArgs(args[0]);\n    return await this.queryInner(query, queryArgs, {});\n  }\n\n  private async queryInner<Query extends FunctionReference<\"query\">>(\n    query: Query,\n    queryArgs: FunctionArgs<Query>,\n    options: { timestampPromise?: Promise<string> },\n  ): Promise<FunctionReturnType<Query>> {\n    const name = getFunctionName(query);\n    const args = [convexToJson(queryArgs)];\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${version}`,\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n\n    const timestamp = options.timestampPromise\n      ? await options.timestampPromise\n      : undefined;\n\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args,\n      ...(timestamp ? { ts: timestamp } : {}),\n    });\n    const endpoint = timestamp\n      ? `${this.address}/api/query_at_ts`\n      : `${this.address}/api/query`;\n\n    const response = await localFetch(endpoint, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers: headers,\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        logForFunction(this.logger, \"info\", \"query\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return jsonToConvex(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== undefined) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new ConvexError(respJSON.errorMessage),\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n\n  private async mutationInner<Mutation extends FunctionReference<\"mutation\">>(\n    mutation: Mutation,\n    mutationArgs: FunctionArgs<Mutation>,\n  ): Promise<FunctionReturnType<Mutation>> {\n    const name = getFunctionName(mutation);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [convexToJson(mutationArgs)],\n    });\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${version}`,\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/mutation`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers: headers,\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        logForFunction(this.logger, \"info\", \"mutation\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return jsonToConvex(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== undefined) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new ConvexError(respJSON.errorMessage),\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n\n  private async processMutationQueue() {\n    if (this.isProcessingQueue) {\n      return;\n    }\n\n    this.isProcessingQueue = true;\n    while (this.mutationQueue.length > 0) {\n      const { mutation, args, resolve, reject } = this.mutationQueue.shift()!;\n      try {\n        const result = await this.mutationInner(mutation, args);\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      }\n    }\n    this.isProcessingQueue = false;\n  }\n\n  private enqueueMutation<Mutation extends FunctionReference<\"mutation\">>(\n    mutation: Mutation,\n    args: FunctionArgs<Mutation>,\n  ): Promise<FunctionReturnType<Mutation>> {\n    return new Promise((resolve, reject) => {\n      this.mutationQueue.push({ mutation, args, resolve, reject });\n      void this.processMutationQueue();\n    });\n  }\n\n  /**\n   * Execute a Convex mutation function. Mutations are queued by default.\n   *\n   * @param name - The name of the mutation.\n   * @param args - The arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - An optional object containing\n   * @returns A promise of the mutation's result.\n   */\n  async mutation<Mutation extends FunctionReference<\"mutation\">>(\n    mutation: Mutation,\n    ...args: ArgsAndOptions<Mutation, HttpMutationOptions>\n  ): Promise<FunctionReturnType<Mutation>> {\n    const [fnArgs, options] = args;\n    const mutationArgs = parseArgs(fnArgs);\n    const queued = !options?.skipQueue;\n\n    if (queued) {\n      return await this.enqueueMutation(mutation, mutationArgs);\n    } else {\n      return await this.mutationInner(mutation, mutationArgs);\n    }\n  }\n\n  /**\n   * Execute a Convex action function. Actions are not queued.\n   *\n   * @param name - The name of the action.\n   * @param args - The arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action<Action extends FunctionReference<\"action\">>(\n    action: Action,\n    ...args: OptionalRestArgs<Action>\n  ): Promise<FunctionReturnType<Action>> {\n    const actionArgs = parseArgs(args[0]);\n    const name = getFunctionName(action);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [convexToJson(actionArgs)],\n    });\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${version}`,\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/action`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers: headers,\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        logForFunction(this.logger, \"info\", \"action\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return jsonToConvex(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== undefined) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new ConvexError(respJSON.errorMessage),\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n\n  /**\n   * Execute a Convex function of an unknown type. These function calls are not queued.\n   *\n   * @param name - The name of the function.\n   * @param args - The arguments object for the function. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the function's result.\n   *\n   * @internal\n   */\n  async function<\n    AnyFunction extends FunctionReference<\"query\" | \"mutation\" | \"action\">,\n  >(\n    anyFunction: AnyFunction | string,\n    componentPath?: string,\n    ...args: OptionalRestArgs<AnyFunction>\n  ): Promise<FunctionReturnType<AnyFunction>> {\n    const functionArgs = parseArgs(args[0]);\n    const name =\n      typeof anyFunction === \"string\"\n        ? anyFunction\n        : getFunctionName(anyFunction);\n    const body = JSON.stringify({\n      componentPath: componentPath,\n      path: name,\n      format: \"convex_encoded_json\",\n      args: convexToJson(functionArgs),\n    });\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${version}`,\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/function`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers: headers,\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        logForFunction(this.logger, \"info\", \"any\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return jsonToConvex(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== undefined) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new ConvexError(respJSON.errorMessage),\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n}\n\nfunction forwardErrorData(errorData: JSONValue, error: ConvexError<string>) {\n  (error as ConvexError<any>).data = jsonToConvex(errorData);\n  return error;\n}\n\n/**\n * @internal\n */\ntype FetchOptions = { cache: \"force-cache\" | \"no-store\" };\n","import { validateDeploymentUrl } from \"../common/index.js\";\nimport {\n  BaseConvexClient,\n  BaseConvexClientOptions,\n  MutationOptions,\n  QueryToken,\n  UserIdentityAttributes,\n} from \"./index.js\";\nimport {\n  FunctionArgs,\n  FunctionReference,\n  FunctionReturnType,\n} from \"../server/index.js\";\nimport { getFunctionName } from \"../server/api.js\";\nimport { AuthTokenFetcher } from \"./sync/authentication_manager.js\";\nimport { ConnectionState } from \"./sync/client.js\";\n\n// In Node.js builds this points to a bundled WebSocket implementation. If no\n// WebSocket implementation is manually specified or globally available,\n// this one is used.\nlet defaultWebSocketConstructor: typeof WebSocket | undefined;\n\n/** internal */\nexport function setDefaultWebSocketConstructor(ws: typeof WebSocket) {\n  defaultWebSocketConstructor = ws;\n}\n\nexport type ConvexClientOptions = BaseConvexClientOptions & {\n  /**\n   * `disabled` makes onUpdate callback registration a no-op and actions,\n   * mutations and one-shot queries throw. Setting disabled to true may be\n   * useful for server-side rendering, where subscriptions don't make sense.\n   */\n  disabled?: boolean;\n  /**\n   * Whether to prompt users in browsers about queued or in-flight mutations.\n   * This only works in environments where `window.onbeforeunload` is available.\n   *\n   * Defaults to true when `window` is defined, otherwise false.\n   */\n  unsavedChangesWarning?: boolean;\n};\n\n/**\n * Stops callbacks from running.\n *\n * @public\n */\nexport type Unsubscribe<T> = {\n  /** Stop calling callback when query results changes. If this is the last listener on this query, stop received updates. */\n  (): void;\n  /** Stop calling callback when query results changes. If this is the last listener on this query, stop received updates. */\n  unsubscribe(): void;\n  /** Get the last known value, possibly with local optimistic updates applied. */\n  getCurrentValue(): T | undefined;\n  /** @internal */\n  getQueryLogs(): string[] | undefined;\n};\n\n/**\n * Subscribes to Convex query functions and executes mutations and actions over a WebSocket.\n *\n * Optimistic updates for mutations are not provided for this client.\n * Third party clients may choose to wrap {@link browser.BaseConvexClient} for additional control.\n *\n * ```ts\n * const client = new ConvexClient(\"https://happy-otter-123.convex.cloud\");\n * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n *   console.log(messages[0].body);\n * });\n * ```\n *\n * @public\n */\nexport class ConvexClient {\n  private listeners: Set<QueryInfo>;\n  private _client: BaseConvexClient | undefined;\n  // A synthetic server event to run callbacks the first time\n  private callNewListenersWithCurrentValuesTimer:\n    | ReturnType<typeof setTimeout>\n    | undefined;\n  private _closed: boolean;\n  private _disabled: boolean;\n  /**\n   * Once closed no registered callbacks will fire again.\n   */\n  get closed(): boolean {\n    return this._closed;\n  }\n  get client(): BaseConvexClient {\n    if (this._client) return this._client;\n    throw new Error(\"ConvexClient is disabled\");\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * Construct a client and immediately initiate a WebSocket connection to the passed address.\n   *\n   * @public\n   */\n  constructor(address: string, options: ConvexClientOptions = {}) {\n    if (options.skipConvexDeploymentUrlCheck !== true) {\n      validateDeploymentUrl(address);\n    }\n    const { disabled, ...baseOptions } = options;\n    this._closed = false;\n    this._disabled = !!disabled;\n    if (\n      defaultWebSocketConstructor &&\n      !(\"webSocketConstructor\" in baseOptions) &&\n      typeof WebSocket === \"undefined\"\n    ) {\n      baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n    }\n    if (\n      typeof window === \"undefined\" &&\n      !(\"unsavedChangesWarning\" in baseOptions)\n    ) {\n      baseOptions.unsavedChangesWarning = false;\n    }\n    if (!this.disabled) {\n      this._client = new BaseConvexClient(\n        address,\n        (updatedQueries) => this._transition(updatedQueries),\n        baseOptions,\n      );\n    }\n    this.listeners = new Set();\n  }\n\n  /**\n   * Call a callback whenever a new result for a query is received. The callback\n   * will run soon after being registered if a result for the query is already\n   * in memory.\n   *\n   * The return value is an {@link Unsubscribe} object which is both a function\n   * an an object with properties. Both of the patterns below work with this object:\n   *\n   *```ts\n   * // call the return value as a function\n   * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   * unsubscribe();\n   *\n   * // unpack the return value into its properties\n   * const {\n   *   getCurrentValue,\n   *   unsubscribe,\n   * } = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   *```\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - The arguments to run the query with.\n   * @param callback - Function to call when the query result updates.\n   * @param onError - Function to call when the query result updates with an error.\n   * If not provided, errors will be thrown instead of calling the callback.\n   *\n   * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n   */\n  onUpdate<Query extends FunctionReference<\"query\">>(\n    query: Query,\n    args: FunctionArgs<Query>,\n    callback: (result: FunctionReturnType<Query>) => unknown,\n    onError?: (e: Error) => unknown,\n  ): Unsubscribe<Query[\"_returnType\"]> {\n    if (this.disabled) {\n      const disabledUnsubscribe = (() => {}) as Unsubscribe<\n        Query[\"_returnType\"]\n      >;\n      const unsubscribeProps: RemoveCallSignature<\n        Unsubscribe<Query[\"_returnType\"]>\n      > = {\n        unsubscribe: disabledUnsubscribe,\n        getCurrentValue: () => undefined,\n        getQueryLogs: () => undefined,\n      };\n      Object.assign(disabledUnsubscribe, unsubscribeProps);\n      return disabledUnsubscribe;\n    }\n\n    // BaseConvexClient takes care of deduplicating queries subscriptions...\n    const { queryToken, unsubscribe } = this.client.subscribe(\n      getFunctionName(query),\n      args,\n    );\n\n    // ...but we still need to bookkeep callbacks to actually call them.\n    const queryInfo: QueryInfo = {\n      queryToken,\n      callback,\n      onError,\n      unsubscribe,\n      hasEverRun: false,\n      query,\n      args,\n    };\n    this.listeners.add(queryInfo);\n\n    // If the callback is registered for a query with a result immediately available\n    // schedule a fake transition to call the callback soon instead of waiting for\n    // a new server update (which could take seconds or days).\n    if (\n      this.queryResultReady(queryToken) &&\n      this.callNewListenersWithCurrentValuesTimer === undefined\n    ) {\n      this.callNewListenersWithCurrentValuesTimer = setTimeout(\n        () => this.callNewListenersWithCurrentValues(),\n        0,\n      );\n    }\n\n    const unsubscribeProps: RemoveCallSignature<\n      Unsubscribe<Query[\"_returnType\"]>\n    > = {\n      unsubscribe: () => {\n        if (this.closed) {\n          // all unsubscribes already ran\n          return;\n        }\n        this.listeners.delete(queryInfo);\n        unsubscribe();\n      },\n      getCurrentValue: () => this.client.localQueryResultByToken(queryToken),\n      getQueryLogs: () => this.client.localQueryLogs(queryToken),\n    };\n    const ret = unsubscribeProps.unsubscribe as Unsubscribe<\n      Query[\"_returnType\"]\n    >;\n    Object.assign(ret, unsubscribeProps);\n    return ret;\n  }\n\n  // Run all callbacks that have never been run before if they have a query\n  // result available now.\n  private callNewListenersWithCurrentValues() {\n    this.callNewListenersWithCurrentValuesTimer = undefined;\n    this._transition([], true);\n  }\n\n  private queryResultReady(queryToken: QueryToken): boolean {\n    return this.client.hasLocalQueryResultByToken(queryToken);\n  }\n\n  async close() {\n    if (this.disabled) return;\n    // prevent pending updates\n    this.listeners.clear();\n    this._closed = true;\n    return this.client.close();\n  }\n\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT (typically an OpenID Connect Identity Token)\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(\n    fetchToken: AuthTokenFetcher,\n    onChange?: (isAuthenticated: boolean) => void,\n  ) {\n    if (this.disabled) return;\n    this.client.setAuth(\n      fetchToken,\n      onChange ??\n        (() => {\n          // Do nothing\n        }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  setAdminAuth(token: string, identity?: UserIdentityAttributes) {\n    if (this.closed) {\n      throw new Error(\"ConvexClient has already been closed.\");\n    }\n    if (this.disabled) return;\n    this.client.setAdminAuth(token, identity);\n  }\n\n  /**\n   * @internal\n   */\n  _transition(updatedQueries: QueryToken[], callNewListeners = false) {\n    // Deduping subscriptions happens in the BaseConvexClient, so not much to do here.\n\n    // Call all callbacks in the order they were registered\n    for (const queryInfo of this.listeners) {\n      const { callback, queryToken, onError, hasEverRun } = queryInfo;\n      if (\n        updatedQueries.includes(queryToken) ||\n        (callNewListeners &&\n          !hasEverRun &&\n          this.client.hasLocalQueryResultByToken(queryToken))\n      ) {\n        queryInfo.hasEverRun = true;\n        let newValue;\n        try {\n          newValue = this.client.localQueryResultByToken(queryToken);\n        } catch (error) {\n          if (!(error instanceof Error)) throw error;\n          if (onError) {\n            onError(\n              error,\n              \"Second argument to onUpdate onError is reserved for later use\",\n            );\n          } else {\n            // Make some noise without unsubscribing or failing to call other callbacks.\n            void Promise.reject(error);\n          }\n          continue;\n        }\n        callback(\n          newValue,\n          \"Second argument to onUpdate callback is reserved for later use\",\n        );\n      }\n    }\n  }\n\n  /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation<Mutation extends FunctionReference<\"mutation\">>(\n    mutation: Mutation,\n    args: FunctionArgs<Mutation>,\n    options?: MutationOptions,\n  ): Promise<Awaited<FunctionReturnType<Mutation>>> {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.mutation(getFunctionName(mutation), args, options);\n  }\n\n  /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action.\n   * @returns A promise of the action's result.\n   */\n  async action<Action extends FunctionReference<\"action\">>(\n    action: Action,\n    args: FunctionArgs<Action>,\n  ): Promise<Awaited<FunctionReturnType<Action>>> {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.action(getFunctionName(action), args);\n  }\n\n  /**\n   * Fetch a query result once.\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query.\n   * @returns A promise of the query's result.\n   */\n  async query<Query extends FunctionReference<\"query\">>(\n    query: Query,\n    args: Query[\"_args\"],\n  ): Promise<Awaited<Query[\"_returnType\"]>> {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    const value = this.client.localQueryResult(getFunctionName(query), args) as\n      | Awaited<Query[\"_returnType\"]>\n      | undefined;\n    if (value !== undefined) return Promise.resolve(value);\n\n    return new Promise((resolve, reject) => {\n      const { unsubscribe } = this.onUpdate(\n        query,\n        args,\n        (value) => {\n          unsubscribe();\n          resolve(value);\n        },\n        (e: Error) => {\n          unsubscribe();\n          reject(e);\n        },\n      );\n    });\n  }\n\n  /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */\n  connectionState(): ConnectionState {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return this.client.connectionState();\n  }\n\n  /**\n   * Subscribe to the {@link ConnectionState} between the client and the Convex\n   * backend, calling a callback each time it changes.\n   *\n   * Subscribed callbacks will be called when any part of ConnectionState changes.\n   * ConnectionState may grow in future versions (e.g. to provide a array of\n   * inflight requests) in which case callbacks would be called more frequently.\n   *\n   * @returns An unsubscribe function to stop listening.\n   */\n  subscribeToConnectionState(\n    cb: (connectionState: ConnectionState) => void,\n  ): () => void {\n    if (this.disabled) return () => {};\n    return this.client.subscribeToConnectionState(cb);\n  }\n}\n\n// internal information tracked about each registered callback\ntype QueryInfo = {\n  callback: (result: any, meta: unknown) => unknown;\n  onError: ((e: Error, meta: unknown) => unknown) | undefined;\n  unsubscribe: () => void;\n  queryToken: QueryToken;\n  hasEverRun: boolean;\n  // query and args are just here for debugging, the queryToken is authoritative\n  query: FunctionReference<\"query\">;\n  args: any;\n};\n\ntype RemoveCallSignature<T> = Omit<T, never>;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi && tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n","const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\nif (typeof runtimeRequire.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = runtimeRequire.addon.bind(runtimeRequire)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n","'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0  // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","import {\n  ConvexClient,\n  setDefaultWebSocketConstructor,\n} from \"./simple_client.js\";\n\n// This file is compiled with `bundle: true` with an exception for\n// `./simple_client.js` so this \"ws\" import will be inlined.\nimport ws from \"ws\";\nconst nodeWebSocket = ws as unknown as typeof WebSocket;\n\nsetDefaultWebSocketConstructor(nodeWebSocket);\n\nexport { ConvexClient };\n","import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n","import { ConvexHttpClient } from \"convex/browser\";\n\nexport const dbClient = () => {\n  const convexUrl = process.env.CONVEX_URL;\n  if (!convexUrl) {\n    throw new Error(\"CONVEX_URL is not set\");\n  }\n  return new ConvexHttpClient(convexUrl);\n};\n","import { dbClient } from \".\";\nimport { Logger } from \"../utils/logger\";\n\nexport const getUserIdFromApiKeyOrNull = async (apiKey: string) => {\n  const db = dbClient();\n  const user = await db.mutation(\n    \"apiKeys:validateApiKeyAndReturnUserIdOrNull\" as any,\n    { apiKey },\n  );\n  if (!user) {\n    Logger.errorWithExit(\n      \"Invalid MCPJam API key. Please check your API key and try again.\",\n    );\n  }\n  return user;\n};\n","import { ModelMessage } from \"ai\";\n\nimport { dbClient } from \"../db\";\nimport type { TestCase } from \"../utils/validators\";\n\nexport type ConfigSummary = {\n  tests: TestCase[];\n  environment: { servers: string[] };\n  llms: string[];\n};\n\nexport type UsageTotals = {\n  inputTokens?: number;\n  outputTokens?: number;\n  totalTokens?: number;\n};\n\ntype DbClientInstance = ReturnType<typeof dbClient> | null;\n\nexport type PersistenceContext = {\n  enabled: boolean;\n  apiKey?: string;\n  db: DbClientInstance;\n  testRunId?: string;\n  configSummary: ConfigSummary;\n  totalPlannedTests: number;\n};\n\ntype DbPayload = Record<string, unknown>;\n\nconst runDbAction = async <T>(\n  persistence: PersistenceContext,\n  action: string,\n  payload: DbPayload,\n): Promise<T | undefined> => {\n  if (!persistence.enabled || !persistence.db) {\n    return undefined;\n  }\n\n  try {\n    return await (persistence.db as any).action(action, payload);\n  } catch {\n    return undefined;\n  }\n};\n\nexport const createPersistenceContext = (\n  apiKey: string | undefined,\n  configSummary: ConfigSummary,\n  totalPlannedTests: number,\n): PersistenceContext => ({\n  enabled: Boolean(apiKey),\n  apiKey,\n  db: apiKey ? dbClient() : null,\n  configSummary,\n  totalPlannedTests,\n});\n\nexport const ensureSuiteRecord = async (persistence: PersistenceContext) => {\n  if (!persistence.enabled || !persistence.apiKey || persistence.testRunId) {\n    return;\n  }\n\n  const createdId = await runDbAction<string>(\n    persistence,\n    \"evals:createEvalTestSuiteWithApiKey\",\n    {\n      apiKey: persistence.apiKey,\n      name: undefined,\n      config: persistence.configSummary,\n      totalTests: persistence.totalPlannedTests,\n    },\n  );\n\n  if (createdId) {\n    persistence.testRunId = createdId;\n  }\n};\n\nexport const createTestCaseRecord = async (\n  persistence: PersistenceContext,\n  test: TestCase,\n  testNumber: number,\n) => {\n  if (!persistence.enabled || !persistence.apiKey) {\n    return undefined;\n  }\n\n  const testCaseId = await runDbAction<string>(\n    persistence,\n    \"evals:createEvalTestCaseWithApiKey\",\n    {\n      apiKey: persistence.apiKey,\n      title: String(test.title ?? `Group ${testNumber}`),\n      query: String(test.query ?? \"\"),\n      provider: String(test.provider ?? \"\"),\n      model: String(test.model ?? \"\"),\n      runs: Number(test.runs ?? 1),\n    },\n  );\n\n  if (!persistence.testRunId) {\n    await ensureSuiteRecord(persistence);\n  }\n\n  return testCaseId;\n};\n\nexport const createIterationRecord = async (\n  persistence: PersistenceContext,\n  testCaseId: string | undefined,\n  iterationNumber: number,\n  startedAt: number,\n) => {\n  if (!persistence.enabled || !persistence.apiKey || !testCaseId) {\n    return undefined;\n  }\n\n  return await runDbAction<string>(\n    persistence,\n    \"evals:createEvalTestIterationWithApiKey\",\n    {\n      apiKey: persistence.apiKey,\n      testCaseId,\n      startedAt,\n      iterationNumber,\n      blob: undefined,\n      actualToolCalls: [],\n      tokensUsed: 0,\n    },\n  );\n};\n\nexport const updateIterationResult = async (\n  persistence: PersistenceContext,\n  evalTestId: string | undefined,\n  passed: boolean,\n  toolsCalled: string[],\n  tokensUsed: UsageTotals,\n  messages: ModelMessage[],\n) => {\n  if (!persistence.enabled || !persistence.apiKey || !evalTestId) {\n    return;\n  }\n\n  await runDbAction(\n    persistence,\n    \"evals:updateEvalTestIterationResultWithApiKey\",\n    {\n      apiKey: persistence.apiKey,\n      testId: evalTestId,\n      status: \"completed\",\n      result: passed ? \"passed\" : \"failed\",\n      actualToolCalls: toolsCalled,\n      tokensUsed: tokensUsed.totalTokens ?? 0,\n      blob: undefined,\n      blobContent: { messages },\n    },\n  );\n};\n\nexport const updateTestCaseResult = async (\n  persistence: PersistenceContext,\n  testCaseId: string | undefined,\n  passedRuns: number,\n  failedRuns: number,\n) => {\n  if (!persistence.enabled || !persistence.apiKey || !testCaseId) {\n    return;\n  }\n\n  const result = failedRuns > 0 ? \"failed\" : \"passed\";\n\n  await runDbAction(persistence, \"evals:updateEvalTestCaseResultWithApiKey\", {\n    apiKey: persistence.apiKey,\n    testCaseId,\n    result,\n  });\n};\n\nexport const markSuiteFailed = async (persistence: PersistenceContext) => {\n  if (!persistence.enabled || !persistence.apiKey || !persistence.testRunId) {\n    return;\n  }\n\n  await runDbAction(persistence, \"evals:updateEvalTestSuiteStatusWithApiKey\", {\n    apiKey: persistence.apiKey,\n    testRunId: persistence.testRunId,\n    status: \"running\",\n    result: \"failed\",\n  });\n};\n\nexport const finalizeSuiteStatus = async (\n  persistence: PersistenceContext,\n  failedRuns: number,\n) => {\n  if (!persistence.enabled || !persistence.apiKey || !persistence.testRunId) {\n    return;\n  }\n\n  await runDbAction(persistence, \"evals:updateEvalTestSuiteStatusWithApiKey\", {\n    apiKey: persistence.apiKey,\n    testRunId: persistence.testRunId,\n    status: \"completed\",\n    result: failedRuns > 0 ? \"failed\" : \"passed\",\n    finishedAt: Date.now(),\n  });\n};\n","import { z } from \"zod\";\nimport type {\n  LogHandler,\n  MastraMCPServerDefinition,\n  MCPClientOptions,\n} from \"@mastra/mcp\";\nimport { SSEClientTransportOptions } from \"@modelcontextprotocol/sdk/client/sse.js\";\nimport { StreamableHTTPClientTransportOptions } from \"@modelcontextprotocol/sdk/client/streamableHttp.js\";\nimport { ClientCapabilities } from \"@modelcontextprotocol/sdk/types.js\";\nimport { convertMastraToolsToVercelTools } from \"../../../shared/tools\";\nimport { Logger } from \"./logger\";\n\nexport const AdvancedConfigSchema = z\n  .object({\n    system: z.string().optional(),\n    temperature: z.number().optional(),\n    toolChoice: z.string().optional(),\n  })\n  .passthrough(); // Allow additional fields\n\nexport const TestCaseSchema = z.object({\n  title: z.string(),\n  query: z.string(),\n  runs: z.number().int(),\n  model: z.string(),\n  provider: z.string(),\n  expectedToolCalls: z.array(z.string()),\n  judgeRequirement: z.string().optional(),\n  advancedConfig: AdvancedConfigSchema.optional(),\n});\n\nexport type TestCase = z.infer<typeof TestCaseSchema>;\n\nexport function validateTestCase(value: unknown): TestCase[] | undefined {\n  try {\n    const result = z.array(TestCaseSchema).parse(value);\n    return result;\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      Logger.errorWithExit(\n        `Your tests.json file is incorrectly configured: ${error.message}`,\n      );\n    }\n    Logger.errorWithExit(\n      `Your tests.json file is incorrectly configured: ${error instanceof Error ? error.message : String(error)}`,\n    );\n  }\n}\n\nconst BaseServerOptionsSchema = z.object({\n  logger: z.custom<LogHandler>().optional(),\n  timeout: z.number().optional(),\n  capabilities: z.custom<ClientCapabilities>().optional(),\n  enableServerLogs: z.boolean().optional(),\n});\n\nconst StdioServerDefinitionSchema = BaseServerOptionsSchema.extend({\n  command: z.string(),\n  args: z.array(z.string()).optional(),\n  env: z.record(z.string(), z.string()).optional(),\n}).strict();\n\nconst HttpServerDefinitionSchema = BaseServerOptionsSchema.extend({\n  // Accept either a URL object or a string URL, but we'll normalize to string\n  url: z.union([z.string().url(), z.instanceof(URL)]),\n  requestInit: z\n    .custom<StreamableHTTPClientTransportOptions[\"requestInit\"]>()\n    .optional(),\n  eventSourceInit: z\n    .custom<SSEClientTransportOptions[\"eventSourceInit\"]>()\n    .optional(),\n  authProvider: z\n    .custom<StreamableHTTPClientTransportOptions[\"authProvider\"]>()\n    .optional(),\n  reconnectionOptions: z\n    .custom<StreamableHTTPClientTransportOptions[\"reconnectionOptions\"]>()\n    .optional(),\n  sessionId: z\n    .custom<StreamableHTTPClientTransportOptions[\"sessionId\"]>()\n    .optional(),\n}).strict();\n\nexport const MCPClientOptionsSchema = z.custom<MCPClientOptions>();\nexport const MastraMCPServerDefinitionSchema = z.union([\n  StdioServerDefinitionSchema,\n  HttpServerDefinitionSchema,\n]);\n\nexport function validateAndNormalizeMCPClientConfiguration(\n  value: unknown,\n): MCPClientOptions | undefined {\n  try {\n    const envParsed = MCPClientOptionsSchema.parse(value);\n\n    const normalizedServers: Record<string, MastraMCPServerDefinition> = {};\n\n    for (const [name, server] of Object.entries(envParsed.servers)) {\n      try {\n        if (server && typeof server === \"object\" && \"url\" in server) {\n          MastraMCPServerDefinitionSchema.parse(server);\n          server.enableServerLogs = false;\n          const urlValue = (server as any).url;\n          const normalizedUrl =\n            typeof urlValue === \"string\"\n              ? new URL(urlValue)\n              : (urlValue as URL);\n          const normalizedServer = {\n            ...(server as Record<string, any>),\n            url: normalizedUrl,\n          } as Record<string, any>;\n          normalizedServers[name] =\n            normalizedServer as MastraMCPServerDefinition;\n        } else {\n          MastraMCPServerDefinitionSchema.parse(server);\n          server.enableServerLogs = false;\n          normalizedServers[name] = server;\n        }\n      } catch (error) {\n        if (error instanceof z.ZodError) {\n          Logger.errorWithExit(\n            `Invalid server configuration for '${name}': ${error.message}`,\n          );\n        }\n        Logger.errorWithExit(\n          `Invalid server configuration for '${name}': ${error}`,\n        );\n      }\n    }\n\n    return {\n      ...envParsed,\n      servers: normalizedServers,\n    };\n  } catch (error) {\n    Logger.errorWithExit(\n      `Your environment.json file is incorrectly configured: ${error instanceof Error ? error.message : String(error)}`,\n    );\n  }\n}\n\nexport { convertMastraToolsToVercelTools };\n\nexport const LlmsConfigSchema = z\n  .object({\n    anthropic: z.string().optional(),\n    openai: z.string().optional(),\n    openrouter: z.string().optional(),\n  })\n  .passthrough(); // Allow additional LLM providers\n\nexport type LlmsConfig = z.infer<typeof LlmsConfigSchema>;\n\nexport function validateLlms(value: unknown): LlmsConfig | undefined {\n  try {\n    const result = LlmsConfigSchema.parse(value);\n    if (\n      !isValidLlmApiKey(result.anthropic) &&\n      !isValidLlmApiKey(result.openai) &&\n      !isValidLlmApiKey(result.openrouter)\n    ) {\n      Logger.errorWithExit(\n        \"You must provide at least one valid LLM API key in your llms.json file.\",\n      );\n    }\n    return result;\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      Logger.errorWithExit(`Invalid LLMs configuration: ${error.message}`);\n    }\n    Logger.errorWithExit(\n      error instanceof Error ? error.message : String(error),\n    );\n  }\n}\n\nconst isValidLlmApiKey = (key: string | undefined) => {\n  if (key && key.startsWith(\"sk-\")) {\n    return true;\n  }\n  return false;\n};\n","import { z, ZodTypeAny } from \"zod\";\nimport { zodToJsonSchema } from \"@alcyone-labs/zod-to-json-schema\";\nimport { tool, type Tool as VercelTool, type ToolCallOptions } from \"ai\";\n\ntype MastraToolExecuteArgs = {\n  context?: unknown;\n  runtimeContext?: unknown;\n};\n\ntype MastraToolInstance = {\n  description?: string;\n  inputSchema?: unknown;\n  outputSchema?: unknown;\n  execute?: (\n    args: MastraToolExecuteArgs,\n    options?: ToolCallOptions,\n  ) => Promise<unknown> | unknown;\n};\n\nconst fallbackInputSchema = z.object({}).passthrough();\n\nconst UNREPRESENTABLE_JSON_SCHEMA_MESSAGES = [\n  \"Custom types cannot be represented in JSON Schema\",\n  \"Function types cannot be represented in JSON Schema\",\n];\n\nfunction isUnrepresentableSchemaError(error: unknown): error is Error {\n  return (\n    error instanceof Error &&\n    UNREPRESENTABLE_JSON_SCHEMA_MESSAGES.some((message) =>\n      error.message.includes(message),\n    )\n  );\n}\n\nfunction isZodSchema(value: unknown): value is ZodTypeAny {\n  return Boolean(\n    value && typeof value === \"object\" && \"safeParse\" in (value as ZodTypeAny),\n  );\n}\n\nfunction isDirectlyUnrepresentable(schema: ZodTypeAny): boolean {\n  const schemaType = (schema as any)?._def?.type;\n  return schemaType === \"custom\" || schemaType === \"function\";\n}\n\nfunction canConvertToJSONSchema(schema: ZodTypeAny): boolean {\n  const toJSONSchema = (\n    z as unknown as {\n      toJSONSchema?: (\n        schema: ZodTypeAny,\n        options?: Record<string, unknown>,\n      ) => unknown;\n    }\n  ).toJSONSchema;\n\n  if (typeof toJSONSchema === \"function\") {\n    try {\n      toJSONSchema(schema);\n      return true;\n    } catch (error) {\n      if (isUnrepresentableSchemaError(error)) {\n        return false;\n      }\n\n      throw error;\n    }\n  }\n\n  try {\n    zodToJsonSchema(schema);\n    return true;\n  } catch (error) {\n    if (isUnrepresentableSchemaError(error)) {\n      return false;\n    }\n\n    throw error;\n  }\n}\n\nfunction ensureInputSchema(schema: unknown): ZodTypeAny {\n  if (!isZodSchema(schema)) {\n    return fallbackInputSchema;\n  }\n\n  if (isDirectlyUnrepresentable(schema)) {\n    return fallbackInputSchema;\n  }\n\n  if (!canConvertToJSONSchema(schema)) {\n    return fallbackInputSchema;\n  }\n\n  return schema;\n}\n\nfunction ensureOutputSchema(schema: unknown): ZodTypeAny | undefined {\n  if (!isZodSchema(schema)) {\n    return undefined;\n  }\n\n  if (isDirectlyUnrepresentable(schema)) {\n    return undefined;\n  }\n\n  if (!canConvertToJSONSchema(schema)) {\n    return undefined;\n  }\n\n  return schema;\n}\n\nfunction extractPureToolName(toolKey: string): string {\n  const separatorIndex = toolKey.indexOf(\"_\");\n\n  if (separatorIndex === -1 || separatorIndex === toolKey.length - 1) {\n    return toolKey;\n  }\n\n  return toolKey.slice(separatorIndex + 1);\n}\n\nexport function convertMastraToolToVercelTool(\n  toolName: string,\n  mastraTool: MastraToolInstance,\n  options?: { originalName?: string },\n): VercelTool {\n  const inputSchema = ensureInputSchema(mastraTool.inputSchema);\n  const outputSchema = ensureOutputSchema(mastraTool.outputSchema);\n  const displayName = options?.originalName ?? toolName;\n\n  const vercelToolConfig: {\n    type: \"dynamic\";\n    description?: string;\n    inputSchema: ZodTypeAny;\n    outputSchema?: ZodTypeAny;\n    execute?: (input: unknown, options: ToolCallOptions) => Promise<unknown>;\n  } = {\n    type: \"dynamic\",\n    description: mastraTool.description,\n    inputSchema,\n  };\n\n  if (outputSchema) {\n    vercelToolConfig.outputSchema = outputSchema;\n  }\n\n  if (typeof mastraTool.execute === \"function\") {\n    vercelToolConfig.execute = async (input, options) => {\n      const executionArgs: MastraToolExecuteArgs = { context: input };\n\n      if (options) {\n        executionArgs.runtimeContext = options;\n      }\n\n      const result = await mastraTool.execute?.(executionArgs, options);\n\n      if (outputSchema) {\n        const parsed = outputSchema.safeParse(result);\n\n        if (!parsed.success) {\n          throw new Error(\n            `Mastra tool '${displayName}' returned invalid output: ${parsed.error.message}`,\n          );\n        }\n\n        return parsed.data;\n      }\n\n      return result;\n    };\n  }\n\n  try {\n    return tool(vercelToolConfig);\n  } catch (error) {\n    if (!isUnrepresentableSchemaError(error)) {\n      throw error;\n    }\n\n    if (vercelToolConfig.outputSchema) {\n      const {\n        outputSchema: _unusedOutputSchema,\n        ...configWithoutOutputSchema\n      } = vercelToolConfig;\n\n      try {\n        return tool(configWithoutOutputSchema);\n      } catch (errorWithoutOutputSchema) {\n        if (!isUnrepresentableSchemaError(errorWithoutOutputSchema)) {\n          throw errorWithoutOutputSchema;\n        }\n\n        const fallbackConfig = {\n          ...configWithoutOutputSchema,\n          inputSchema: fallbackInputSchema,\n        };\n\n        return tool(fallbackConfig);\n      }\n    }\n\n    const fallbackConfig = {\n      ...vercelToolConfig,\n      inputSchema: fallbackInputSchema,\n    };\n\n    return tool(fallbackConfig);\n  }\n}\n\nexport function convertMastraToolsToVercelTools(\n  mastraTools: Record<string, MastraToolInstance>,\n): Record<string, VercelTool> {\n  return Object.fromEntries(\n    Object.entries(mastraTools).map(([name, mastraTool]) => {\n      const pureToolName = extractPureToolName(name);\n\n      return [\n        pureToolName,\n        convertMastraToolToVercelTool(pureToolName, mastraTool, {\n          originalName: name,\n        }),\n      ];\n    }),\n  );\n}\n","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    // In Zod V4, description is stored in the jsonSchema object, not the def object\n    if (jsonSchema && jsonSchema.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(jsonSchema.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n    openAiAnyTypeName: \"OpenAiAnyType\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        flags: { hasReferencedOpenAiAnyType: false },\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n","export const getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\n","/**\n * Comprehensive Zod V3/V4 Compatibility Layer\n *\n * This file provides a complete compatibility interface that can be used as a drop-in\n * replacement for Zod imports throughout the codebase, ensuring compatibility between\n * Zod V3 and V4 without requiring changes to individual parser files.\n */\n// Try to import ZodFirstPartyTypeKind, but provide fallback\nlet ZodFirstPartyTypeKindFromZod;\ntry {\n    const zodImport = require(\"zod\");\n    ZodFirstPartyTypeKindFromZod = zodImport.ZodFirstPartyTypeKind;\n}\ncatch {\n    // Fallback - will be handled below\n}\n// ==============================================================================\n// ZODFIRSTPARTYTYPEKIND COMPATIBILITY\n// ==============================================================================\n// Create a comprehensive ZodFirstPartyTypeKind that works with both V3 and V4\nexport const ZodFirstPartyTypeKind = ZodFirstPartyTypeKindFromZod ||\n    {\n        // V3 style names\n        ZodString: \"ZodString\",\n        ZodNumber: \"ZodNumber\",\n        ZodBigInt: \"ZodBigInt\",\n        ZodBoolean: \"ZodBoolean\",\n        ZodDate: \"ZodDate\",\n        ZodUndefined: \"ZodUndefined\",\n        ZodNull: \"ZodNull\",\n        ZodVoid: \"ZodVoid\",\n        ZodAny: \"ZodAny\",\n        ZodUnknown: \"ZodUnknown\",\n        ZodNever: \"ZodNever\",\n        ZodArray: \"ZodArray\",\n        ZodObject: \"ZodObject\",\n        ZodUnion: \"ZodUnion\",\n        ZodDiscriminatedUnion: \"ZodDiscriminatedUnion\",\n        ZodIntersection: \"ZodIntersection\",\n        ZodTuple: \"ZodTuple\",\n        ZodRecord: \"ZodRecord\",\n        ZodMap: \"ZodMap\",\n        ZodSet: \"ZodSet\",\n        ZodFunction: \"ZodFunction\",\n        ZodLazy: \"ZodLazy\",\n        ZodLiteral: \"ZodLiteral\",\n        ZodEnum: \"ZodEnum\",\n        ZodNativeEnum: \"ZodNativeEnum\",\n        ZodPromise: \"ZodPromise\",\n        ZodEffects: \"ZodEffects\",\n        ZodOptional: \"ZodOptional\",\n        ZodNullable: \"ZodNullable\",\n        ZodDefault: \"ZodDefault\",\n        ZodCatch: \"ZodCatch\",\n        ZodReadonly: \"ZodReadonly\",\n        ZodBranded: \"ZodBranded\",\n        ZodPipeline: \"ZodPipeline\",\n        // V4 style names (for forward compatibility)\n        string: \"string\",\n        number: \"number\",\n        bigint: \"bigint\",\n        boolean: \"boolean\",\n        date: \"date\",\n        undefined: \"undefined\",\n        null: \"null\",\n        void: \"void\",\n        any: \"any\",\n        unknown: \"unknown\",\n        never: \"never\",\n        array: \"array\",\n        object: \"object\",\n        union: \"union\",\n        discriminated_union: \"discriminated_union\",\n        intersection: \"intersection\",\n        tuple: \"tuple\",\n        record: \"record\",\n        map: \"map\",\n        set: \"set\",\n        function: \"function\",\n        lazy: \"lazy\",\n        literal: \"literal\",\n        enum: \"enum\",\n        nativeEnum: \"nativeEnum\",\n        promise: \"promise\",\n        effects: \"effects\",\n        optional: \"optional\",\n        nullable: \"nullable\",\n        default: \"default\",\n        catch: \"catch\",\n        readonly: \"readonly\",\n        branded: \"branded\",\n        pipeline: \"pipeline\",\n    };\n// ==============================================================================\n// COMPATIBILITY UTILITY FUNCTIONS\n// ==============================================================================\n/**\n * Get the type name from a schema definition, compatible with both V3 and V4\n * V3: uses _def.typeName\n * V4: uses _def.type\n */\nexport function getDefTypeName(def) {\n    return def?.typeName || def?.type;\n}\n/**\n * Get the inner type definition from a wrapper type (nullable, optional, etc.)\n * V3: uses innerType._def\n * V4: uses innerType.def (but also has _def for compatibility)\n */\nexport function getInnerTypeDef(wrapperDef) {\n    if (!wrapperDef?.innerType)\n        return undefined;\n    return wrapperDef.innerType.def || wrapperDef.innerType._def;\n}\n/**\n * Check if a schema definition represents a nullable type\n */\nexport function isNullableType(def) {\n    const typeName = getDefTypeName(def);\n    return typeName === \"nullable\" || typeName === \"ZodNullable\";\n}\n/**\n * Check if a schema definition represents an optional type\n */\nexport function isOptionalType(def) {\n    const typeName = getDefTypeName(def);\n    return typeName === \"optional\" || typeName === \"ZodOptional\";\n}\n/**\n * Get all primitive type names for both V3 and V4\n */\nexport function getAllPrimitiveTypeNames() {\n    return [\n        // V3 names\n        \"ZodString\",\n        \"ZodNumber\",\n        \"ZodBigInt\",\n        \"ZodBoolean\",\n        \"ZodNull\",\n        // V4 names\n        \"string\",\n        \"number\",\n        \"bigint\",\n        \"boolean\",\n        \"null\",\n    ];\n}\n/**\n * Extract metadata from a schema, compatible with both V3 and V4\n * V3: stored in _def.description\n * V4: accessed via .meta() method or .description property\n */\nexport function extractMetadata(schema) {\n    let metadata = {};\n    // V3 style: check _def for description\n    if (schema?._def?.description) {\n        metadata.description = schema._def.description;\n    }\n    // V4 style: .meta() method\n    if (typeof schema?.meta === \"function\") {\n        try {\n            const meta = schema.meta();\n            if (meta && typeof meta === \"object\") {\n                metadata = { ...metadata, ...meta };\n            }\n        }\n        catch {\n            // Ignore errors when calling meta()\n        }\n    }\n    // V4 fallback: direct properties\n    if (!metadata.description && schema?.description) {\n        metadata.description = schema.description;\n    }\n    return metadata;\n}\n/**\n * Safe access to schema properties across V3/V4\n */\nexport function safeAccess(obj, ...paths) {\n    let current = obj;\n    for (const path of paths) {\n        if (current && typeof current === \"object\" && path in current) {\n            current = current[path];\n        }\n        else {\n            return undefined;\n        }\n    }\n    return current;\n}\n/**\n * Check if two type names represent the same type across V3/V4\n */\nexport function isSameType(typeName1, typeName2) {\n    if (typeName1 === typeName2)\n        return true;\n    // Map V3 to V4 equivalents\n    const typeMapping = {\n        ZodString: \"string\",\n        ZodNumber: \"number\",\n        ZodBigInt: \"bigint\",\n        ZodBoolean: \"boolean\",\n        ZodDate: \"date\",\n        ZodUndefined: \"undefined\",\n        ZodNull: \"null\",\n        ZodVoid: \"void\",\n        ZodAny: \"any\",\n        ZodUnknown: \"unknown\",\n        ZodNever: \"never\",\n        ZodArray: \"array\",\n        ZodObject: \"object\",\n        ZodUnion: \"union\",\n        ZodDiscriminatedUnion: \"discriminated_union\",\n        ZodIntersection: \"intersection\",\n        ZodTuple: \"tuple\",\n        ZodRecord: \"record\",\n        ZodMap: \"map\",\n        ZodSet: \"set\",\n        ZodFunction: \"function\",\n        ZodLazy: \"lazy\",\n        ZodLiteral: \"literal\",\n        ZodEnum: \"enum\",\n        ZodNativeEnum: \"nativeEnum\",\n        ZodPromise: \"promise\",\n        ZodEffects: \"effects\",\n        ZodOptional: \"optional\",\n        ZodNullable: \"nullable\",\n        ZodDefault: \"default\",\n        ZodCatch: \"catch\",\n        ZodReadonly: \"readonly\",\n        ZodBranded: \"branded\",\n        ZodPipeline: \"pipeline\",\n    };\n    return (typeMapping[typeName1] === typeName2 || typeMapping[typeName2] === typeName1);\n}\n// ==============================================================================\n// PRIMITIVE MAPPINGS (FOR NULLABLE PARSER AND OTHERS)\n// ==============================================================================\nexport const primitiveMappings = {\n    // V3 mappings\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"string\", // BigInt is represented as string in JSON\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n    // V4 mappings\n    string: \"string\",\n    number: \"number\",\n    bigint: \"string\", // BigInt is represented as string in JSON\n    boolean: \"boolean\",\n    null: \"null\",\n};\n","import { getRelativePath } from \"../getRelativePath.js\";\nexport function parseAnyDef(refs) {\n    if (refs.target !== \"openAi\") {\n        return {};\n    }\n    const anyDefinitionPath = [\n        ...refs.basePath,\n        refs.definitionPath,\n        refs.openAiAnyTypeName,\n    ];\n    refs.flags.hasReferencedOpenAiAnyType = true;\n    return {\n        $ref: refs.$refStrategy === \"relative\"\n            ? getRelativePath(anyDefinitionPath, refs.currentPath)\n            : anyDefinitionPath.join(\"/\"),\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    // Changed from ZodArrayDef to any for Zod V4 compatibility\n    const res = {\n        type: \"array\",\n    };\n    // In Zod V4, use element instead of type, and .def instead of ._def\n    const elementType = def.element || def.type;\n    const elementDef = elementType?.def || elementType?._def;\n    const elementTypeName = elementDef?.type || elementDef?.typeName;\n    if (elementDef && elementTypeName !== \"any\" && elementTypeName !== \"ZodAny\") {\n        res.items = parseDef(elementDef, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    // Handle Zod V4 checks array\n    if (def.checks) {\n        for (const check of def.checks) {\n            const checkDef = check._zod?.def;\n            if (checkDef) {\n                // Get error message from error function if available\n                let message = checkDef.message;\n                if (!message &&\n                    checkDef.error &&\n                    typeof checkDef.error === \"function\") {\n                    try {\n                        message = checkDef.error();\n                    }\n                    catch (e) {\n                        // Ignore error, use undefined message\n                    }\n                }\n                switch (checkDef.check) {\n                    case \"min_length\":\n                        setResponseValueAndErrors(res, \"minItems\", checkDef.minimum, message, refs);\n                        break;\n                    case \"max_length\":\n                        setResponseValueAndErrors(res, \"maxItems\", checkDef.maximum, message, refs);\n                        break;\n                    case \"length_equals\":\n                        // Handle exact length constraint\n                        const length = checkDef.length;\n                        if (length !== undefined) {\n                            setResponseValueAndErrors(res, \"minItems\", length, message, refs);\n                            setResponseValueAndErrors(res, \"maxItems\", length, message, refs);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n    // Handle old Zod V3 structure for backward compatibility\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, // Changed from ZodBigIntDef to any for Zod V4 compatibility\nrefs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        // Handle Zod V4 structure with _zod.def\n        const checkDef = check._zod?.def;\n        if (checkDef) {\n            // Get error message from error function if available\n            let message = checkDef.message;\n            if (!message && checkDef.error && typeof checkDef.error === \"function\") {\n                try {\n                    message = checkDef.error();\n                }\n                catch (e) {\n                    // Ignore error, use undefined message\n                }\n            }\n            switch (checkDef.check) {\n                case \"greater_than\":\n                    // Preserve BigInt values as expected by the tests\n                    const minValue = checkDef.value;\n                    if (refs.target === \"jsonSchema7\") {\n                        if (checkDef.inclusive) {\n                            setResponseValueAndErrors(res, \"minimum\", minValue, message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMinimum\", minValue, message, refs);\n                        }\n                    }\n                    else {\n                        if (!checkDef.inclusive) {\n                            res.exclusiveMinimum = true;\n                        }\n                        setResponseValueAndErrors(res, \"minimum\", minValue, message, refs);\n                    }\n                    break;\n                case \"less_than\":\n                    // Preserve BigInt values as expected by the tests\n                    const maxValue = checkDef.value;\n                    if (refs.target === \"jsonSchema7\") {\n                        if (checkDef.inclusive) {\n                            setResponseValueAndErrors(res, \"maximum\", maxValue, message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMaximum\", maxValue, message, refs);\n                        }\n                    }\n                    else {\n                        if (!checkDef.inclusive) {\n                            res.exclusiveMaximum = true;\n                        }\n                        setResponseValueAndErrors(res, \"maximum\", maxValue, message, refs);\n                    }\n                    break;\n                case \"multiple_of\":\n                    // Preserve BigInt values as expected by the tests\n                    const multipleValue = checkDef.value;\n                    setResponseValueAndErrors(res, \"multipleOf\", multipleValue, message, refs);\n                    break;\n            }\n        }\n        else {\n            // Fallback to old Zod V3 structure for backward compatibility\n            switch (check.kind) {\n                case \"min\":\n                    if (refs.target === \"jsonSchema7\") {\n                        if (check.inclusive) {\n                            setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                        }\n                    }\n                    else {\n                        if (!check.inclusive) {\n                            res.exclusiveMinimum = true;\n                        }\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    break;\n                case \"max\":\n                    if (refs.target === \"jsonSchema7\") {\n                        if (check.inclusive) {\n                            setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                        }\n                    }\n                    else {\n                        if (!check.inclusive) {\n                            res.exclusiveMaximum = true;\n                        }\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    break;\n                case \"multipleOf\":\n                    setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                    break;\n            }\n        }\n    }\n    return res;\n}\n","export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    // Changed from ZodBrandedDef to any for Zod V4 compatibility\n    // In Zod V4, branded types might not have a separate type property\n    // They might just be the underlying type with TypeScript-level branding\n    if (_def.type && _def.type._def) {\n        // Old Zod V3 structure\n        return parseDef(_def.type._def, refs);\n    }\n    else {\n        // Zod V4 structure - just parse the def directly as it's the underlying type\n        return parseDef(_def, refs);\n    }\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, // Changed from ZodDateDef to any for Zod V4 compatibility\nrefs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    // Changed from ZodDateDef to any for Zod V4 compatibility\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    // Handle Zod V4 checks structure\n    if (def.checks) {\n        for (const check of def.checks) {\n            // Handle Zod V4 structure with _zod.def\n            const checkDef = check._zod?.def;\n            if (checkDef) {\n                // Get error message from error function if available\n                let message = checkDef.message;\n                if (!message &&\n                    checkDef.error &&\n                    typeof checkDef.error === \"function\") {\n                    try {\n                        message = checkDef.error();\n                    }\n                    catch (e) {\n                        // Ignore error, use undefined message\n                    }\n                }\n                switch (checkDef.check) {\n                    case \"greater_than\":\n                        // Convert Date to milliseconds for JSON Schema\n                        const minValue = checkDef.value instanceof Date\n                            ? checkDef.value.getTime()\n                            : checkDef.value;\n                        setResponseValueAndErrors(res, \"minimum\", minValue, message, refs);\n                        break;\n                    case \"less_than\":\n                        // Convert Date to milliseconds for JSON Schema\n                        const maxValue = checkDef.value instanceof Date\n                            ? checkDef.value.getTime()\n                            : checkDef.value;\n                        setResponseValueAndErrors(res, \"maximum\", maxValue, message, refs);\n                        break;\n                }\n            }\n            else {\n                // Fallback to old Zod V3 structure for backward compatibility\n                switch (check.kind) {\n                    case \"min\":\n                        setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                        check.message, refs);\n                        break;\n                    case \"max\":\n                        setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                        check.message, refs);\n                        break;\n                }\n            }\n        }\n    }\n    return res;\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue,\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseEffectsDef(_def, // Changed from ZodEffectsDef to any for Zod V4 compatibility\nrefs) {\n    // In Zod V4, effects might be represented differently\n    // For transforms, we might have a pipe structure\n    if (_def.type === \"pipe\") {\n        // This is a transform (pipe) - handle in pipeline parser\n        return refs.effectStrategy === \"input\"\n            ? parseDef(_def.in?.def || _def.in?._def, refs)\n            : parseAnyDef(refs);\n    }\n    // For backward compatibility with Zod V3 effects\n    if (_def.schema) {\n        return refs.effectStrategy === \"input\"\n            ? parseDef(_def.schema._def || _def.schema.def, refs)\n            : parseAnyDef(refs);\n    }\n    // If no schema found, return any\n    return parseAnyDef(refs);\n}\n","export function parseEnumDef(def) {\n    // In Zod V4, use entries instead of values\n    const values = def.entries ? Object.values(def.entries) : def.values;\n    return {\n        type: \"string\",\n        enum: Array.from(values),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n","export function parseLiteralDef(def, // Changed from ZodLiteralDef to any for Zod V4 compatibility\nrefs) {\n    // In Zod V4, use values[0] instead of value\n    const value = def.values ? def.values[0] : def.value;\n    const parsedType = typeof value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: value,\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            // Handle Zod V4 structure with _zod.def\n            const checkDef = check._zod?.def;\n            if (checkDef) {\n                switch (checkDef.check) {\n                    case \"min_length\":\n                        // Extract error message for min_length check\n                        let minLengthMessage = checkDef.message;\n                        if (!minLengthMessage &&\n                            checkDef.error &&\n                            typeof checkDef.error === \"function\") {\n                            try {\n                                minLengthMessage = checkDef.error();\n                            }\n                            catch (e) {\n                                // Ignore error, use undefined message\n                            }\n                        }\n                        setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                            ? Math.max(res.minLength, checkDef.minimum)\n                            : checkDef.minimum, minLengthMessage, refs);\n                        break;\n                    case \"max_length\":\n                        // Extract error message for max_length check\n                        let maxLengthMessage = checkDef.message;\n                        if (!maxLengthMessage &&\n                            checkDef.error &&\n                            typeof checkDef.error === \"function\") {\n                            try {\n                                maxLengthMessage = checkDef.error();\n                            }\n                            catch (e) {\n                                // Ignore error, use undefined message\n                            }\n                        }\n                        setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                            ? Math.min(res.maxLength, checkDef.maximum)\n                            : checkDef.maximum, maxLengthMessage, refs);\n                        break;\n                    case \"length_equals\":\n                        // Handle exact length constraint\n                        let message = checkDef.message;\n                        if (!message &&\n                            checkDef.error &&\n                            typeof checkDef.error === \"function\") {\n                            try {\n                                message = checkDef.error();\n                            }\n                            catch (e) {\n                                // Ignore error, use undefined message\n                            }\n                        }\n                        // For length_equals, the length is stored in checkDef.length\n                        const length = checkDef.length;\n                        if (length !== undefined) {\n                            // Apply length constraint, but respect existing min/max constraints\n                            setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                                ? Math.max(res.minLength, length)\n                                : length, message, refs);\n                            setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                                ? Math.min(res.maxLength, length)\n                                : length, message, refs);\n                        }\n                        break;\n                    case \"string_format\":\n                        // Extract error message for string format checks\n                        let formatMessage = checkDef.message;\n                        if (!formatMessage &&\n                            checkDef.error &&\n                            typeof checkDef.error === \"function\") {\n                            try {\n                                formatMessage = checkDef.error();\n                            }\n                            catch (e) {\n                                // Ignore error, use undefined message\n                            }\n                        }\n                        const format = checkDef.format;\n                        if (format === \"email\") {\n                            switch (refs.emailStrategy) {\n                                case \"format:email\":\n                                    addFormat(res, \"email\", formatMessage, refs);\n                                    break;\n                                case \"format:idn-email\":\n                                    addFormat(res, \"idn-email\", formatMessage, refs);\n                                    break;\n                                case \"pattern:zod\":\n                                    addPattern(res, zodPatterns.email, formatMessage, refs);\n                                    break;\n                            }\n                        }\n                        else if (format === \"uri\") {\n                            addFormat(res, \"uri\", formatMessage, refs);\n                        }\n                        else if (format === \"url\") {\n                            addFormat(res, \"uri\", formatMessage, refs);\n                        }\n                        else if (format === \"uuid\") {\n                            addFormat(res, \"uuid\", formatMessage, refs);\n                        }\n                        else if (format === \"date-time\") {\n                            addFormat(res, \"date-time\", formatMessage, refs);\n                        }\n                        else if (format === \"date\") {\n                            addFormat(res, \"date\", formatMessage, refs);\n                        }\n                        else if (format === \"time\") {\n                            addFormat(res, \"time\", formatMessage, refs);\n                        }\n                        else if (format === \"duration\") {\n                            addFormat(res, \"duration\", formatMessage, refs);\n                        }\n                        else if (format === \"datetime\") {\n                            addFormat(res, \"date-time\", formatMessage, refs);\n                        }\n                        else if (format === \"ipv4\") {\n                            addFormat(res, \"ipv4\", formatMessage, refs);\n                        }\n                        else if (format === \"ipv6\") {\n                            addFormat(res, \"ipv6\", formatMessage, refs);\n                        }\n                        else if (format === \"ulid\") {\n                            // Use the library's ULID pattern for consistency\n                            addPattern(res, zodPatterns.ulid, formatMessage, refs);\n                        }\n                        else if (format === \"nanoid\") {\n                            // Use the library's nanoid pattern for consistency\n                            addPattern(res, zodPatterns.nanoid, formatMessage, refs);\n                        }\n                        else if (format === \"cuid\") {\n                            // Use the library's CUID pattern for consistency\n                            addPattern(res, zodPatterns.cuid, formatMessage, refs);\n                        }\n                        else if (format === \"cuid2\") {\n                            // Use the library's CUID2 pattern for consistency\n                            addPattern(res, zodPatterns.cuid2, formatMessage, refs);\n                        }\n                        else if (format === \"base64\") {\n                            // Handle base64 format with strategy\n                            switch (refs.base64Strategy) {\n                                case \"format:binary\":\n                                    addFormat(res, \"binary\", formatMessage, refs);\n                                    break;\n                                case \"contentEncoding:base64\":\n                                default:\n                                    // Default strategy is contentEncoding\n                                    if (formatMessage && refs.errorMessages) {\n                                        res.errorMessage = {\n                                            ...res.errorMessage,\n                                            contentEncoding: formatMessage,\n                                        };\n                                    }\n                                    res.contentEncoding = \"base64\";\n                                    break;\n                                case \"pattern:zod\":\n                                    // Use the library's base64 pattern for consistency\n                                    addPattern(res, zodPatterns.base64, formatMessage, refs);\n                                    break;\n                            }\n                        }\n                        else if (format === \"regex\" && checkDef.pattern) {\n                            // Handle Zod V4 regex format\n                            let message = checkDef.message;\n                            if (!message &&\n                                checkDef.error &&\n                                typeof checkDef.error === \"function\") {\n                                try {\n                                    message = checkDef.error();\n                                }\n                                catch (e) {\n                                    // Ignore error, use undefined message\n                                }\n                            }\n                            addPattern(res, checkDef.pattern, message, refs);\n                        }\n                        else if (checkDef.pattern) {\n                            // Handle formats with patterns (cuid, cuid2, nanoid, ulid, startsWith, endsWith, includes, etc.)\n                            let message = checkDef.message;\n                            if (!message &&\n                                checkDef.error &&\n                                typeof checkDef.error === \"function\") {\n                                try {\n                                    message = checkDef.error();\n                                }\n                                catch (e) {\n                                    // Ignore error, use undefined message\n                                }\n                            }\n                            // Handle patternStrategy: \"preserve\" for startsWith, endsWith, includes\n                            if (refs.patternStrategy === \"preserve\") {\n                                let preservedPattern;\n                                if (checkDef.prefix !== undefined) {\n                                    // startsWith case\n                                    preservedPattern = `^${checkDef.prefix}`;\n                                }\n                                else if (checkDef.suffix !== undefined) {\n                                    // endsWith case\n                                    preservedPattern = `${checkDef.suffix}$`;\n                                }\n                                else if (checkDef.includes !== undefined) {\n                                    // includes case\n                                    preservedPattern = checkDef.includes;\n                                }\n                                if (preservedPattern !== undefined) {\n                                    addPattern(res, new RegExp(preservedPattern), message, refs);\n                                    break;\n                                }\n                            }\n                            // Normalize Zod V4 patterns to match Zod V3 behavior\n                            let normalizedPattern = checkDef.pattern;\n                            const patternSource = checkDef.pattern.source;\n                            // For startsWith: remove trailing .*\n                            if (patternSource.startsWith(\"^\") &&\n                                patternSource.endsWith(\".*\")) {\n                                normalizedPattern = new RegExp(patternSource.slice(0, -2), checkDef.pattern.flags);\n                            }\n                            // For endsWith: remove leading .*\n                            else if (patternSource.startsWith(\".*\") &&\n                                patternSource.endsWith(\"$\")) {\n                                normalizedPattern = new RegExp(patternSource.slice(2), checkDef.pattern.flags);\n                            }\n                            addPattern(res, normalizedPattern, message, refs);\n                        }\n                        break;\n                }\n                continue;\n            }\n            // Handle old Zod V3 structure for backward compatibility\n            if (check.kind) {\n                switch (check.kind) {\n                    case \"min\":\n                        setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                            ? Math.max(res.minLength, check.value)\n                            : check.value, check.message, refs);\n                        break;\n                    case \"max\":\n                        setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                            ? Math.min(res.maxLength, check.value)\n                            : check.value, check.message, refs);\n                        break;\n                    case \"email\":\n                        switch (refs.emailStrategy) {\n                            case \"format:email\":\n                                addFormat(res, \"email\", check.message, refs);\n                                break;\n                            case \"format:idn-email\":\n                                addFormat(res, \"idn-email\", check.message, refs);\n                                break;\n                            case \"pattern:zod\":\n                                addPattern(res, zodPatterns.email, check.message, refs);\n                                break;\n                        }\n                        break;\n                    case \"url\":\n                        addFormat(res, \"uri\", check.message, refs);\n                        break;\n                    case \"uuid\":\n                        addFormat(res, \"uuid\", check.message, refs);\n                        break;\n                    case \"regex\":\n                        addPattern(res, check.regex, check.message, refs);\n                        break;\n                    case \"cuid\":\n                        addPattern(res, zodPatterns.cuid, check.message, refs);\n                        break;\n                    case \"cuid2\":\n                        addPattern(res, zodPatterns.cuid2, check.message, refs);\n                        break;\n                    case \"startsWith\":\n                        addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                        break;\n                    case \"endsWith\":\n                        addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                        break;\n                    case \"datetime\":\n                        addFormat(res, \"date-time\", check.message, refs);\n                        break;\n                    case \"date\":\n                        addFormat(res, \"date\", check.message, refs);\n                        break;\n                    case \"time\":\n                        addFormat(res, \"time\", check.message, refs);\n                        break;\n                    case \"duration\":\n                        addFormat(res, \"duration\", check.message, refs);\n                        break;\n                    case \"length\":\n                        setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                            ? Math.max(res.minLength, check.value)\n                            : check.value, check.message, refs);\n                        setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                            ? Math.min(res.maxLength, check.value)\n                            : check.value, check.message, refs);\n                        break;\n                    case \"includes\": {\n                        addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                        break;\n                    }\n                    case \"ip\": {\n                        if (check.version !== \"v6\") {\n                            addFormat(res, \"ipv4\", check.message, refs);\n                        }\n                        if (check.version !== \"v4\") {\n                            addFormat(res, \"ipv6\", check.message, refs);\n                        }\n                        break;\n                    }\n                    case \"base64url\":\n                        addPattern(res, zodPatterns.base64url, check.message, refs);\n                        break;\n                    case \"jwt\":\n                        addPattern(res, zodPatterns.jwt, check.message, refs);\n                        break;\n                    case \"cidr\": {\n                        if (check.version !== \"v6\") {\n                            addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                        }\n                        if (check.version !== \"v4\") {\n                            addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                        }\n                        break;\n                    }\n                    case \"emoji\":\n                        addPattern(res, zodPatterns.emoji(), check.message, refs);\n                        break;\n                    case \"ulid\": {\n                        addPattern(res, zodPatterns.ulid, check.message, refs);\n                        break;\n                    }\n                    case \"base64\": {\n                        switch (refs.base64Strategy) {\n                            case \"format:binary\": {\n                                addFormat(res, \"binary\", check.message, refs);\n                                break;\n                            }\n                            case \"contentEncoding:base64\": {\n                                setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                                break;\n                            }\n                            case \"pattern:zod\": {\n                                addPattern(res, zodPatterns.base64, check.message, refs);\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                    case \"nanoid\": {\n                        addPattern(res, zodPatterns.nanoid, check.message, refs);\n                    }\n                    case \"toLowerCase\":\n                    case \"toUpperCase\":\n                    case \"trim\":\n                        break;\n                    default:\n                        /* c8 ignore next */\n                        // Handle unknown check types in V3/V4 compatibility\n                        break;\n                }\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"), // Case-insensitive\n        m: regex.flags.includes(\"m\"), // `^` and `$` matches adjacent to newline characters\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    // In Zod V4, check for enum type differently\n    const keyTypeDef = def.keyType?.def || def.keyType?._def;\n    const keyTypeType = keyTypeDef?.type || keyTypeDef?.typeName;\n    if (refs.target === \"openApi3\" &&\n        (keyTypeType === \"enum\" || keyTypeType === \"ZodEnum\")) {\n        // In Zod V4, get values from entries or values\n        const enumValues = keyTypeDef?.entries ? Object.values(keyTypeDef.entries) : keyTypeDef?.values;\n        const valueTypeDef = def.valueType?.def || def.valueType?._def;\n        if (enumValues && Array.isArray(enumValues)) {\n            return {\n                type: \"object\",\n                required: enumValues,\n                properties: enumValues.reduce((acc, key) => ({\n                    ...acc,\n                    [key]: parseDef(valueTypeDef, {\n                        ...refs,\n                        currentPath: [...refs.currentPath, \"properties\", key],\n                    }) ?? parseAnyDef(refs),\n                }), {}),\n                additionalProperties: refs.rejectedAdditionalProperties,\n            };\n        }\n    }\n    // In Zod V4, if there's no valueType, the keyType is actually the value type\n    const actualValueType = def.valueType || def.keyType;\n    const valueTypeDef = actualValueType?.def || actualValueType?._def;\n    const schema = {\n        type: \"object\",\n        additionalProperties: valueTypeDef ? parseDef(valueTypeDef, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) : refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if ((keyTypeType === \"string\" || keyTypeType === \"ZodString\") &&\n        keyTypeDef?.checks?.length) {\n        const { type, ...keyType } = parseStringDef(keyTypeDef, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (keyTypeType === \"enum\" || keyTypeType === \"ZodEnum\") {\n        const enumValues = keyTypeDef?.entries ? Object.values(keyTypeDef.entries) : keyTypeDef?.values;\n        return {\n            ...schema,\n            propertyNames: {\n                enum: enumValues,\n            },\n        };\n    }\n    else if ((keyTypeType === \"branded\" || keyTypeType === \"ZodBranded\") &&\n        keyTypeDef?.type) {\n        const brandedTypeDef = keyTypeDef.type?.def || keyTypeDef.type?._def;\n        const brandedTypeType = brandedTypeDef?.type || brandedTypeDef?.typeName;\n        if ((brandedTypeType === \"string\" || brandedTypeType === \"ZodString\") &&\n            brandedTypeDef?.checks?.length) {\n            const { type, ...keyType } = parseBrandedDef(keyTypeDef, refs);\n            return {\n                ...schema,\n                propertyNames: keyType,\n            };\n        }\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || parseAnyDef(refs);\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || parseAnyDef(refs);\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n","export function parseNativeEnumDef(def) {\n    // In Zod V4, use entries instead of values\n    const object = def.entries || def.values;\n    const actualKeys = Object.keys(object).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n","import { parseAnyDef } from \"./any.js\";\nexport function parseNeverDef(refs) {\n    return refs.target === \"openAi\"\n        ? undefined\n        : {\n            not: parseAnyDef({\n                ...refs,\n                currentPath: [...refs.currentPath, \"not\"],\n            }),\n        };\n}\n","export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n","import { getInnerTypeDef, getDefTypeName, getAllPrimitiveTypeNames, primitiveMappings, } from \"../zodV3V4Compat.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseNullableDef(def, refs) {\n    const innerTypeDef = getInnerTypeDef(def);\n    const innerTypeKey = getDefTypeName(innerTypeDef);\n    if (innerTypeKey &&\n        getAllPrimitiveTypeNames().includes(innerTypeKey) &&\n        (!innerTypeDef.checks || !innerTypeDef.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[innerTypeKey],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[innerTypeKey],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(innerTypeDef, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base) {\n            const result = { allOf: [base], nullable: true };\n            // Try to get description from the referenced definition\n            const refPath = base.$ref;\n            if (refPath && refPath.includes(refs.definitionPath)) {\n                const pathParts = refPath.split(\"/\");\n                const defName = pathParts[pathParts.length - 1];\n                const definitionSchema = refs.definitions[defName];\n                if (definitionSchema) {\n                    let description;\n                    // Try to get description via meta() method\n                    if (typeof definitionSchema.meta === \"function\") {\n                        try {\n                            const meta = definitionSchema.meta();\n                            if (meta && meta.description) {\n                                description = meta.description;\n                            }\n                        }\n                        catch (e) {\n                            // Ignore errors\n                        }\n                    }\n                    // Fallback to direct description property\n                    if (!description && definitionSchema.description) {\n                        description = definitionSchema.description;\n                    }\n                    if (description) {\n                        result.description = description;\n                    }\n                }\n            }\n            return result;\n        }\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(innerTypeDef, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n","import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, // Changed from ZodNumberDef to any for Zod V4 compatibility\nrefs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        // Handle Zod V4 structure with _zod.def\n        const checkDef = check._zod?.def;\n        if (checkDef) {\n            // Get error message from error function if available\n            let message = checkDef.message;\n            if (!message && checkDef.error && typeof checkDef.error === 'function') {\n                try {\n                    message = checkDef.error();\n                }\n                catch (e) {\n                    // Ignore error, use undefined message\n                }\n            }\n            switch (checkDef.check) {\n                case \"number_format\":\n                    if (checkDef.format === \"safeint\") {\n                        res.type = \"integer\";\n                        addErrorMessage(res, \"type\", message, refs);\n                    }\n                    break;\n                case \"greater_than\":\n                    if (refs.target === \"jsonSchema7\") {\n                        if (checkDef.inclusive) {\n                            setResponseValueAndErrors(res, \"minimum\", checkDef.value, message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMinimum\", checkDef.value, message, refs);\n                        }\n                    }\n                    else {\n                        if (!checkDef.inclusive) {\n                            res.exclusiveMinimum = true;\n                        }\n                        setResponseValueAndErrors(res, \"minimum\", checkDef.value, message, refs);\n                    }\n                    break;\n                case \"less_than\":\n                    if (refs.target === \"jsonSchema7\") {\n                        if (checkDef.inclusive) {\n                            setResponseValueAndErrors(res, \"maximum\", checkDef.value, message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMaximum\", checkDef.value, message, refs);\n                        }\n                    }\n                    else {\n                        if (!checkDef.inclusive) {\n                            res.exclusiveMaximum = true;\n                        }\n                        setResponseValueAndErrors(res, \"maximum\", checkDef.value, message, refs);\n                    }\n                    break;\n                case \"multiple_of\":\n                    setResponseValueAndErrors(res, \"multipleOf\", checkDef.value, message, refs);\n                    break;\n            }\n        }\n        else {\n            // Fallback to old Zod V3 structure for backward compatibility\n            switch (check.kind) {\n                case \"int\":\n                    res.type = \"integer\";\n                    addErrorMessage(res, \"type\", check.message, refs);\n                    break;\n                case \"min\":\n                    if (refs.target === \"jsonSchema7\") {\n                        if (check.inclusive) {\n                            setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                        }\n                    }\n                    else {\n                        if (!check.inclusive) {\n                            res.exclusiveMinimum = true;\n                        }\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    break;\n                case \"max\":\n                    if (refs.target === \"jsonSchema7\") {\n                        if (check.inclusive) {\n                            setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                        }\n                        else {\n                            setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                        }\n                    }\n                    else {\n                        if (!check.inclusive) {\n                            res.exclusiveMaximum = true;\n                        }\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    break;\n                case \"multipleOf\":\n                    setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                    break;\n            }\n        }\n    }\n    return res;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape;\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        // In Zod V4, the shape contains schema objects with .def instead of ._def\n        const propDefInner = propDef.def || propDef._def;\n        if (propDef === undefined || propDefInner === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        let parsedDef;\n        if (propOptional && forceOptionalIntoNullable) {\n            // In Zod V4, we need to check the type property instead of typeName\n            const typeName = propDefInner.typeName || propDefInner.type;\n            if (typeName === \"ZodOptional\" || typeName === \"optional\") {\n                // Get the inner type from the optional schema\n                const innerType = propDefInner.innerType;\n                if (innerType) {\n                    const innerTypeDef = innerType.def || innerType._def;\n                    const innerTypeType = innerTypeDef?.type || innerTypeDef?.typeName;\n                    // Parse the inner type\n                    const innerParsed = parseDef(innerTypeDef, {\n                        ...refs,\n                        currentPath: [...refs.currentPath, \"properties\", propName],\n                        propertyPath: [...refs.currentPath, \"properties\", propName],\n                    });\n                    // Convert to nullable type for OpenAI mode\n                    if (innerParsed &&\n                        typeof innerParsed === \"object\" &&\n                        \"type\" in innerParsed) {\n                        if (typeof innerParsed.type === \"string\") {\n                            parsedDef = {\n                                ...innerParsed,\n                                type: [innerParsed.type, \"null\"],\n                            };\n                        }\n                        else {\n                            parsedDef = innerParsed;\n                        }\n                    }\n                    else {\n                        parsedDef = innerParsed;\n                    }\n                }\n            }\n            propOptional = false; // Make it required in OpenAI mode\n        }\n        else {\n            parsedDef = parseDef(propDefInner, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n        }\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    // In Zod V4, check catchall property\n    if (def.catchall) {\n        const catchallDef = def.catchall.def || def.catchall._def;\n        const catchallType = catchallDef?.type || catchallDef?.typeName;\n        if (catchallType === \"never\" || catchallType === \"ZodNever\") {\n            // Strict mode - no additional properties\n            return refs.rejectedAdditionalProperties;\n        }\n        else if (catchallType === \"unknown\" || catchallType === \"ZodUnknown\") {\n            // Passthrough mode - allow additional properties\n            return refs.allowedAdditionalProperties;\n        }\n        else {\n            // Custom catchall type\n            return parseDef(catchallDef, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            });\n        }\n    }\n    // Fallback to unknownKeys for backward compatibility\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n    // Default behavior for regular objects without explicit catchall\n    // When removeAdditionalStrategy is \"strict\", regular objects should allow additional properties\n    // unless they are explicitly made strict (which would have a catchall with \"never\")\n    return refs.removeAdditionalStrategy === \"strict\"\n        ? refs.allowedAdditionalProperties\n        : refs.rejectedAdditionalProperties;\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: parseAnyDef(refs),\n                },\n                innerSchema,\n            ],\n        }\n        : parseAnyDef(refs);\n};\n","import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, // Changed from ZodPipelineDef to any for Zod V4 compatibility\nrefs) => {\n    // In Zod V4, use .def instead of ._def for inner types\n    const inDef = def.in?.def || def.in?._def;\n    const outDef = def.out?.def || def.out?._def;\n    // Check if this is a transform/preprocess operation (effect-like)\n    // In Zod V4, transforms have one side with type \"transform\"\n    const isTransformLike = (inDef?.type === \"transform\") ||\n        (outDef?.type === \"transform\");\n    // For transform-like operations, use effectStrategy instead of pipeStrategy\n    if (isTransformLike) {\n        if (refs.effectStrategy === \"input\") {\n            // For preprocess: in=transform, out=target -> use out (target)\n            // For transform: in=source, out=transform -> use in (source)\n            return inDef?.type === \"transform\"\n                ? parseDef(outDef, refs) // preprocess case\n                : parseDef(inDef, refs); // transform case\n        }\n        else {\n            // effectStrategy === \"any\"\n            return {}; // Return empty schema for \"any\" strategy\n        }\n    }\n    // Regular pipe handling\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(inDef, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(outDef, refs);\n    }\n    const a = parseDef(inDef, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(outDef, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, // Changed from ZodPromiseDef to any for Zod V4 compatibility\nrefs) {\n    // In Zod V4, use innerType instead of type, and .def instead of ._def\n    const innerType = def.innerType || def.type;\n    const innerDef = innerType?.def || innerType?._def;\n    return parseDef(innerDef, refs);\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    // In Zod V4, use valueType.def instead of valueType._def\n    const valueTypeDef = def.valueType?.def || def.valueType?._def;\n    const items = parseDef(valueTypeDef, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    // Handle Zod V4 checks array\n    if (def.checks) {\n        for (const check of def.checks) {\n            const checkDef = check._zod?.def;\n            if (checkDef) {\n                // Get error message from error function if available\n                let message = checkDef.message;\n                if (!message && checkDef.error && typeof checkDef.error === 'function') {\n                    try {\n                        message = checkDef.error();\n                    }\n                    catch (e) {\n                        // Ignore error, use undefined message\n                    }\n                }\n                switch (checkDef.check) {\n                    case \"min_size\":\n                        setResponseValueAndErrors(schema, \"minItems\", checkDef.minimum, message, refs);\n                        break;\n                    case \"max_size\":\n                        setResponseValueAndErrors(schema, \"maxItems\", checkDef.maximum, message, refs);\n                        break;\n                }\n            }\n        }\n    }\n    // Handle old Zod V3 structure for backward compatibility\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, // ZodTupleDef compatibility for V3/V4\nrefs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => x === undefined ? acc : [...acc, x], []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => x === undefined ? acc : [...acc, x], []),\n        };\n    }\n}\n","import { parseAnyDef } from \"./any.js\";\nexport function parseUndefinedDef(refs) {\n    return {\n        not: parseAnyDef(refs),\n    };\n}\n","import { parseDef, getSchemaMetaInfo, setSchemaMetaInfo } from \"../parseDef.js\";\nimport { getDefTypeName } from \"../zodV3V4Compat.js\";\nconst primitiveMappings = {\n    // Zod V3 type names\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n    // Zod V4 type names\n    string: \"string\",\n    number: \"number\",\n    bigint: \"integer\",\n    boolean: \"boolean\",\n    null: \"null\",\n};\n// Function to extract meta information from a schema (similar to zodToJsonSchema.ts)\nconst extractMetaInfoForSchema = (schema) => {\n    if (!schema || !schema._def)\n        return;\n    let metaInfo = {};\n    // Check for description property (from .describe())\n    if (schema.description) {\n        metaInfo.description = schema.description;\n    }\n    // Check for meta function (from .meta())\n    if (typeof schema.meta === \"function\") {\n        try {\n            const meta = schema.meta();\n            if (meta && typeof meta === \"object\") {\n                metaInfo = { ...metaInfo, ...meta };\n            }\n        }\n        catch (e) {\n            // Ignore errors when calling meta()\n        }\n    }\n    // Store the meta information if we found any\n    if (Object.keys(metaInfo).length > 0) {\n        setSchemaMetaInfo(schema._def, metaInfo);\n    }\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // Extract meta information for each option to ensure descriptions are available\n    options.forEach((option) => extractMetaInfoForSchema(option));\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => {\n        const typeKey = getDefTypeName(x._def);\n        return (typeKey &&\n            typeKey in primitiveMappings &&\n            (!x._def.checks || !x._def.checks.length));\n    })) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const typeKey = getDefTypeName(x._def);\n            const type = typeKey\n                ? primitiveMappings[typeKey]\n                : undefined;\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => {\n        const typeKey = getDefTypeName(x._def);\n        const hasDescription = x.description || getSchemaMetaInfo(x._def)?.description;\n        return (typeKey &&\n            (typeKey === \"ZodLiteral\" || typeKey === \"literal\") &&\n            !hasDescription);\n    })) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            // In Zod V4, use values[0] instead of value\n            const value = x._def.values\n                ? x._def.values[0]\n                : x._def.value;\n            const type = typeof value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    // In Zod V4, use values[0] instead of value\n                    const value = x._def.values\n                        ? x._def.values[0]\n                        : x._def.value;\n                    return acc.includes(value) ? acc : [...acc, value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => {\n        const typeKey = getDefTypeName(x._def);\n        return typeKey === \"ZodEnum\" || typeKey === \"enum\";\n    })) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => {\n                // In Zod V4, use entries instead of values\n                const values = x._def.entries\n                    ? Object.values(x._def.entries)\n                    : x._def.values;\n                return [...acc, ...values.filter((x) => !acc.includes(x))];\n            }, []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n","import { parseAnyDef } from \"./any.js\";\nexport function parseUnknownDef(refs) {\n    return parseAnyDef(refs);\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { ZodFirstPartyTypeKind } from \"./zodV3V4Compat.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, // Changed from ZodFirstPartyTypeKind to any for Zod V4 compatibility\nrefs) => {\n    // In Zod V4, typeName is undefined and we need to use def.type instead\n    const actualType = typeName || def.type;\n    switch (actualType) {\n        case \"ZodString\":\n        case \"string\":\n            return parseStringDef(def, refs);\n        case \"ZodNumber\":\n        case \"number\":\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case \"ZodObject\":\n        case \"object\":\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case \"ZodBigInt\":\n        case \"bigint\":\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case \"ZodBoolean\":\n        case \"boolean\":\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case \"ZodDate\":\n        case \"date\":\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case \"ZodUndefined\":\n        case \"undefined\":\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef(refs);\n        case \"ZodNull\":\n        case \"null\":\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case \"ZodArray\":\n        case \"array\":\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case \"ZodUnion\":\n        case \"union\":\n        case \"ZodDiscriminatedUnion\":\n        case \"discriminatedUnion\":\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case \"ZodIntersection\":\n        case \"intersection\":\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case \"ZodTuple\":\n        case \"tuple\":\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case \"ZodRecord\":\n        case \"record\":\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case \"ZodLiteral\":\n        case \"literal\":\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case \"ZodEnum\":\n        case \"enum\":\n        case ZodFirstPartyTypeKind.ZodEnum:\n            // In Zod V4, both regular and native enums have type \"enum\"\n            // Distinguish by checking if keys === values (regular enum) or keys !== values (native enum)\n            if (def.entries) {\n                const keys = Object.keys(def.entries);\n                const values = Object.values(def.entries);\n                const isNativeEnum = !keys.every((k, i) => k === values[i]);\n                if (isNativeEnum) {\n                    return parseNativeEnumDef(def);\n                }\n            }\n            return parseEnumDef(def);\n        case \"ZodNativeEnum\":\n        case \"nativeEnum\":\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case \"ZodNullable\":\n        case \"nullable\":\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case \"ZodOptional\":\n        case \"optional\":\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case \"ZodMap\":\n        case \"map\":\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case \"ZodSet\":\n        case \"set\":\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case \"ZodLazy\":\n        case \"lazy\":\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case \"ZodPromise\":\n        case \"promise\":\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case \"ZodNaN\":\n        case \"nan\":\n        case \"ZodNever\":\n        case \"never\":\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef(refs);\n        case \"ZodEffects\":\n        case \"effects\":\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case \"ZodAny\":\n        case \"any\":\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef(refs);\n        case \"ZodUnknown\":\n        case \"unknown\":\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef(refs);\n        case \"ZodDefault\":\n        case \"default\":\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case \"ZodBranded\":\n        case \"branded\":\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case \"ZodReadonly\":\n        case \"readonly\":\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case \"ZodCatch\":\n        case \"catch\":\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case \"ZodPipeline\":\n        case \"pipeline\":\n        case \"pipe\": // Zod V4 uses \"pipe\" instead of \"pipeline\"\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case \"ZodFunction\":\n        case \"function\":\n        case \"ZodVoid\":\n        case \"void\":\n        case \"ZodSymbol\":\n        case \"symbol\":\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        case \"custom\":\n            // Handle z.instanceof() and other custom types - treat as any\n            return parseAnyDef(refs);\n        default:\n            /* c8 ignore next */\n            return undefined;\n    }\n};\n","import { getDefTypeName, getInnerTypeDef, isNullableType, } from \"./zodV3V4Compat.js\";\nimport { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nimport { getRelativePath } from \"./getRelativePath.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\n// WeakMap to store meta information for schemas\nconst schemaMetaMap = new WeakMap();\nexport const setSchemaMetaInfo = (def, metaInfo) => {\n    schemaMetaMap.set(def, metaInfo);\n};\nexport const getSchemaMetaInfo = (def) => {\n    return schemaMetaMap.get(def);\n};\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            // Special handling for nullable schemas in OpenAPI mode\n            const typeName = getDefTypeName(def);\n            if (isNullableType(def) &&\n                refs.target === \"openApi3\" &&\n                \"$ref\" in seenSchema) {\n                const metaInfo = getSchemaMetaInfo(def);\n                const innerTypeDef = getInnerTypeDef(def);\n                const innerSeenItem = innerTypeDef ? refs.seen.get(innerTypeDef) : null;\n                // Check if this nullable schema or its inner type has metadata\n                const hasOwnDescription = metaInfo?.description;\n                const innerMetaInfo = innerTypeDef\n                    ? getSchemaMetaInfo(innerTypeDef)\n                    : null;\n                const hasInnerDescription = innerMetaInfo?.description;\n                // Check if the referenced definition has a description\n                let referencedDefinitionDescription;\n                if (innerSeenItem && innerSeenItem.path.includes(refs.definitionPath)) {\n                    const defName = innerSeenItem.path[innerSeenItem.path.length - 1];\n                    const definitionSchema = refs.definitions[defName];\n                    if (definitionSchema) {\n                        // Try to get description directly from the schema\n                        if (typeof definitionSchema.meta === \"function\") {\n                            try {\n                                const meta = definitionSchema.meta();\n                                if (meta && meta.description) {\n                                    referencedDefinitionDescription = meta.description;\n                                }\n                            }\n                            catch (e) {\n                                // Ignore errors\n                            }\n                        }\n                        // Fallback to direct description property\n                        if (!referencedDefinitionDescription &&\n                            definitionSchema.description) {\n                            referencedDefinitionDescription = definitionSchema.description;\n                        }\n                    }\n                }\n                // If the nullable schema has its own description, inner type has description,\n                // or the referenced definition has description, create the allOf wrapper.\n                // Otherwise, return simple $ref for reuse.\n                if (hasOwnDescription ||\n                    hasInnerDescription ||\n                    referencedDefinitionDescription) {\n                    let refToUse = seenSchema;\n                    // If the inner type has a definition path, use that instead\n                    if (innerSeenItem &&\n                        innerSeenItem.path.includes(refs.definitionPath)) {\n                        refToUse = { $ref: innerSeenItem.path.join(\"/\") };\n                    }\n                    const result = { allOf: [refToUse], nullable: true };\n                    // Add description based on priority: own description > inner description > referenced definition description\n                    const currentPathStr = refs.currentPath.join(\"/\");\n                    if (hasOwnDescription && !currentPathStr.includes(\"group\")) {\n                        result.description = metaInfo.description;\n                    }\n                    else if (hasInnerDescription && !hasOwnDescription) {\n                        result.description = innerMetaInfo.description;\n                    }\n                    else if (referencedDefinitionDescription && !hasOwnDescription) {\n                        result.description = referencedDefinitionDescription;\n                    }\n                    return result;\n                }\n                // For nullable schemas without metadata, subsequent occurrences should just reference the first\n                return seenSchema;\n            }\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const typeName = getDefTypeName(def);\n    const jsonSchemaOrGetter = selectParser(def, typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return parseAnyDef(refs);\n            }\n            return refs.$refStrategy === \"seen\" ? parseAnyDef(refs) : undefined;\n        }\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    // Check for description in the Zod V3 way (stored in def.description)\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    // Check for meta information from Zod V4 extraction process\n    const metaInfo = getSchemaMetaInfo(def);\n    if (metaInfo) {\n        // V4 meta info takes precedence over V3 def.description\n        if (metaInfo.description) {\n            jsonSchema.description = metaInfo.description;\n            if (refs.markdownDescription) {\n                jsonSchema.markdownDescription = metaInfo.description;\n            }\n        }\n        // Add other meta properties if they exist (V4 feature)\n        if (metaInfo.title) {\n            jsonSchema.title = metaInfo.title;\n        }\n        if (metaInfo.examples) {\n            jsonSchema.examples = metaInfo.examples;\n        }\n        // Add any other meta properties\n        for (const [key, value] of Object.entries(metaInfo)) {\n            if (key !== \"description\" && key !== \"title\" && key !== \"examples\") {\n                jsonSchema[key] = value;\n            }\n        }\n    }\n    return jsonSchema;\n};\n","import { parseDef, setSchemaMetaInfo } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { extractMetadata } from \"./zodV3V4Compat.js\";\n// Function to extract and store meta information from a schema\nconst extractAndStoreMetaInfo = (schema) => {\n    if (!schema || !schema._def)\n        return;\n    // Extract meta information using the compatibility layer\n    const metaInfo = extractMetadata(schema);\n    // Store the meta information if we found any\n    if (Object.keys(metaInfo).length > 0) {\n        setSchemaMetaInfo(schema._def, metaInfo);\n    }\n    // Recursively process nested schemas\n    if (schema._def.innerType) {\n        extractAndStoreMetaInfo(schema._def.innerType);\n    }\n    if (schema._def.options && Array.isArray(schema._def.options)) {\n        schema._def.options.forEach((option) => extractAndStoreMetaInfo(option));\n    }\n    if (schema._def.left) {\n        extractAndStoreMetaInfo(schema._def.left);\n    }\n    if (schema._def.right) {\n        extractAndStoreMetaInfo(schema._def.right);\n    }\n    if (schema._def.schema) {\n        extractAndStoreMetaInfo(schema._def.schema);\n    }\n    if (schema._def.type) {\n        extractAndStoreMetaInfo(schema._def.type);\n    }\n    // Handle object properties\n    if (schema._def.shape && typeof schema._def.shape === \"object\") {\n        Object.values(schema._def.shape).forEach((propSchema) => {\n            extractAndStoreMetaInfo(propSchema);\n        });\n    }\n    // Handle array elements\n    if (schema._def.element) {\n        extractAndStoreMetaInfo(schema._def.element);\n    }\n    // Handle object shapes (properties)\n    if (schema._def.shape && typeof schema._def.shape === \"object\") {\n        Object.values(schema._def.shape).forEach((propertySchema) => {\n            extractAndStoreMetaInfo(propertySchema);\n        });\n    }\n    // Handle array items\n    if (schema._def.type && schema._def.type._def) {\n        extractAndStoreMetaInfo(schema._def.type);\n    }\n};\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    // Extract and store meta information from the main schema and any definitions\n    extractAndStoreMetaInfo(schema);\n    if (typeof options === \"object\" && options.definitions) {\n        Object.values(options.definitions).forEach((defSchema) => {\n            extractAndStoreMetaInfo(defSchema);\n        });\n    }\n    let definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? parseAnyDef(refs),\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? parseAnyDef(refs);\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    if (refs.flags.hasReferencedOpenAiAnyType) {\n        if (!definitions) {\n            definitions = {};\n        }\n        if (!definitions[refs.openAiAnyTypeName]) {\n            definitions[refs.openAiAnyTypeName] = {\n                // Skipping \"object\" as no properties can be defined and additionalProperties must be \"false\"\n                type: [\"string\", \"number\", \"integer\", \"boolean\", \"array\", \"null\"],\n                items: {\n                    $ref: refs.$refStrategy === \"relative\"\n                        ? \"1\"\n                        : [\n                            ...refs.basePath,\n                            refs.definitionPath,\n                            refs.openAiAnyTypeName,\n                        ].join(\"/\"),\n                },\n            };\n        }\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n","import { createOpenRouter } from \"@openrouter/ai-sdk-provider\";\nimport { createOpenAI } from \"@ai-sdk/openai\";\nimport { createAnthropic } from \"@ai-sdk/anthropic\";\nimport { LlmsConfig } from \"./validators\";\nimport { LanguageModel, ToolSet, TypedToolCall } from \"ai\";\nimport { Logger } from \"./logger\";\n\nexport const createLlmModel = (\n  provider: string,\n  model: string,\n  llmsConfig: LlmsConfig,\n): LanguageModel | undefined => {\n  if (!llmsConfig[provider]) {\n    Logger.errorWithExit(`LLM API key not found for provider: ${provider}`);\n  }\n  switch (provider) {\n    case \"anthropic\":\n      return createAnthropic({ apiKey: llmsConfig.anthropic })(model);\n    case \"openai\":\n      return createOpenAI({ apiKey: llmsConfig.openai })(model);\n    case \"openrouter\":\n      return createOpenRouter({ apiKey: llmsConfig.openrouter })(model);\n    default:\n      Logger.errorWithExit(`Unsupported provider: ${provider}`);\n  }\n};\n\nexport const extractToolNamesAsArray = (\n  toolCalls: TypedToolCall<ToolSet>[],\n) => {\n  return toolCalls.map((toolCall) => toolCall.toolName);\n};\n","export type EvaluationResult = {\n  expectedToolCalls: string[];\n  toolsCalled: string[];\n  missing: string[];\n  unexpected: string[];\n  passed: boolean;\n};\n\nexport const evaluateResults = (\n  expectedToolCalls: string[],\n  toolsCalled: string[],\n) => {\n  return {\n    expectedToolCalls,\n    toolsCalled,\n    missing: expectedToolCalls.filter((tool) => !toolsCalled.includes(tool)),\n    unexpected: toolsCalled.filter((tool) => !expectedToolCalls.includes(tool)),\n    passed: expectedToolCalls.every((tool) => toolsCalled.includes(tool)),\n  };\n};\n","import { randomUUID } from \"crypto\";\nimport { homedir } from \"os\";\nimport { join } from \"path\";\nimport { readFileSync, writeFileSync, existsSync, mkdirSync } from \"fs\";\n\nconst CONFIG_DIR = join(homedir(), \".mcpjam\");\nconst USER_ID_FILE = join(CONFIG_DIR, \"user-id.json\");\n\ninterface UserConfig {\n  userId: string;\n  createdAt: string;\n}\n\n/**\n * Gets or creates a unique user ID stored locally\n * @returns A persistent unique identifier for this user\n */\nexport function getUserId(): string {\n  try {\n    // Ensure config directory exists\n    if (!existsSync(CONFIG_DIR)) {\n      mkdirSync(CONFIG_DIR, { recursive: true });\n    }\n\n    // Check if user ID file exists\n    if (existsSync(USER_ID_FILE)) {\n      const configData = readFileSync(USER_ID_FILE, \"utf8\");\n      const config: UserConfig = JSON.parse(configData);\n\n      // Validate that we have a valid userId\n      if (config.userId && typeof config.userId === \"string\") {\n        return config.userId;\n      }\n    }\n\n    // Generate new user ID\n    const newUserId = randomUUID();\n    const newConfig: UserConfig = {\n      userId: newUserId,\n      createdAt: new Date().toISOString(),\n    };\n\n    // Save to file\n    writeFileSync(USER_ID_FILE, JSON.stringify(newConfig, null, 2));\n\n    return newUserId;\n  } catch (error) {\n    // Fallback to session-based UUID if file operations fail\n    console.warn(\"Failed to persist user ID, using session-based ID:\", error);\n    return randomUUID();\n  }\n}\n","import { PostHog } from \"posthog-node\";\n\nexport const hogClient = new PostHog(\n  \"phc_dTOPniyUNU2kD8Jx8yHMXSqiZHM8I91uWopTMX6EBE9\",\n  { host: \"https://us.i.posthog.com\" },\n);\n","{\n  \"name\": \"@mcpjam/cli\",\n  \"version\": \"1.1.6\",\n  \"type\": \"module\",\n  \"description\": \"MCPJam CLI for programmatic MCP testing and evals\",\n  \"license\": \"Apache-2.0\",\n  \"author\": \"MCPJam (https://mcpjam.com)\",\n  \"homepage\": \"https://mcpjam.com\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/MCPJam/inspector.git\",\n    \"directory\": \"cli\"\n  },\n  \"main\": \"dist/index.js\",\n  \"bin\": {\n    \"mcpjam\": \"bin/mcpjam.js\"\n  },\n  \"files\": [\n    \"bin\",\n    \"dist\",\n    \"package.json\",\n    \"README.md\",\n    \".env.production\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"tsup --watch\",\n    \"build-and-test\": \"npm run build && npm run test\",\n    \"test\": \"node bin/mcpjam.js evals run -t local-examples/tests.json -e local-examples/environment.json -l local-examples/llms.json\",\n    \"start\": \"node bin/mcpjam.js\"\n  },\n  \"dependencies\": {\n    \"@ai-sdk/anthropic\": \"^2.0.17\",\n    \"@ai-sdk/openai\": \"^2.0.32\",\n    \"@hono/node-server\": \"^1.13.7\",\n    \"@mastra/core\": \"^0.18.0\",\n    \"@mastra/mcp\": \"^0.13.1\",\n    \"@modelcontextprotocol/sdk\": \"^1.17.3\",\n    \"@openrouter/ai-sdk-provider\": \"^1.2.0\",\n    \"ai\": \"^5.0.11\",\n    \"chalk\": \"^5.6.0\",\n    \"cli-table3\": \"^0.6.5\",\n    \"commander\": \"^12.0.0\",\n    \"dotenv\": \"^17.2.2\",\n    \"hono\": \"^4.6.11\",\n    \"ollama-ai-provider-v2\": \"^1.3.1\",\n    \"posthog-node\": \"^5.9.1\",\n    \"update-notifier\": \"^7.3.1\",\n    \"zod\": \"^4.0.16\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20\",\n    \"@types/update-notifier\": \"^6.0.8\",\n    \"tsup\": \"^8.3.5\",\n    \"typescript\": \"^5\"\n  }\n}\n"],"mappings":"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","names":["Command","createRequire","existsSync","version","arr","value","v","__publicField","name","path","__publicField","__publicField","name","resolve","__require","createWebSocketStream","err","path","name","resolve","dir","arr","platform","arch","runtime","abi","require_node_gyp_build","mask","data","require_fallback","code","Receiver","Sender","v","URL","WebSocket","key","protocol","WebSocketServer","version","z","name","message","valueTypeDef","base","primitiveMappings","types","x","typeName","name","schema","options","fallbackConfig","name","z","name","z","tool","config","require","createRequire","version","__dirname","existsSync","Command"]}
